2025-05-07 11:26:40,167 - root - INFO - 系统初始化开始...
2025-05-07 11:26:40,167 - src.modules.account.manager - INFO - 将使用 bybit 作为主要交易所
2025-05-07 11:26:40,274 - src.modules.risk.monitor - INFO - 已初始化Telegram告警处理器
2025-05-07 11:26:40,274 - src.modules.risk.monitor - WARNING - 风险监控运行在开发模式下，部分功能可能被禁用
2025-05-07 11:26:40,280 - src.utils.metrics - INFO - Prometheus指标服务器已启动，端口: 9090
2025-05-07 11:26:40,280 - root - INFO - 系统初始化完成
2025-05-07 11:26:40,280 - root - INFO - 系统启动中...
2025-05-07 11:26:40,280 - src.modules.state.manager - INFO - 初始化状态管理器
2025-05-07 11:26:40,350 - src.modules.state.manager - ERROR - 初始化状态管理器失败: role "postgres" does not exist
2025-05-07 11:26:40,350 - src.modules.state.manager - WARNING - 将使用文件系统作为备用状态存储
2025-05-07 11:26:40,350 - src.modules.market_data.service - INFO - 初始化市场数据服务
2025-05-07 11:26:40,355 - src.modules.market_data.service - INFO - 成功连接交易所: binance
2025-05-07 11:26:40,358 - src.modules.market_data.service - INFO - 成功连接交易所: bybit
2025-05-07 11:26:40,358 - src.modules.account.manager - INFO - 初始化账户管理器
2025-05-07 11:26:40,358 - src.modules.account.manager - INFO - 跳过非主要交易所 binance 的初始化
2025-05-07 11:26:40,361 - src.modules.account.manager - INFO - 账户管理器成功连接交易所: bybit
2025-05-07 11:26:43,770 - src.modules.account.manager - INFO - 交易所 bybit 使用主账户: bybit_main
2025-05-07 11:26:43,771 - src.modules.execution.service - INFO - 初始化交易执行服务
2025-05-07 11:26:43,780 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: binance
2025-05-07 11:26:43,785 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: bybit
2025-05-07 11:26:43,785 - src.modules.risk.monitor - INFO - 开始风险监控
2025-05-07 11:26:43,785 - src.modules.risk.monitor - WARNING - 开发模式: 市场数据服务或账户管理器不可用，将使用模拟服务
2025-05-07 11:26:43,785 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟市场数据服务
2025-05-07 11:26:43,795 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟账户管理器
2025-05-07 11:26:43,795 - src.modules.risk.monitor - INFO - 风险监控已启动
2025-05-07 11:26:43,795 - src.modules.strategy.engine - INFO - 初始化资金费率套利策略
2025-05-07 11:26:43,796 - src.modules.risk.monitor - INFO - 风险监控循环已启动
2025-05-07 11:26:43,796 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:26:43,796 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:26:43,800 - src.modules.state.manager - ERROR - 加载策略状态失败: role "postgres" does not exist
2025-05-07 11:26:43,803 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:43,804 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:43,804 - src.modules.strategy.engine - INFO - 开始初始化子账户
2025-05-07 11:26:43,804 - src.modules.strategy.engine - INFO - 初始化账户 binance_sub_1，初始资金 10000 USDT
2025-05-07 11:26:43,804 - src.modules.account.manager - ERROR - 转移资产失败: 源账户 binance_main 不存在
2025-05-07 11:26:43,804 - src.modules.strategy.engine - ERROR - 初始化账户 binance_sub_1 失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:26:43,808 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:43,808 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:43,809 - src.modules.risk.monitor - ERROR - 账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:26:43,809 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:26:43,809 - src.modules.risk.monitor - INFO - 为账户 binance_sub_1 强制执行风险限制
2025-05-07 11:26:43,809 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:26:43,810 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:26:43,814 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:43,814 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:43,814 - src.modules.strategy.engine - INFO - 完成初始化 20 个子账户
2025-05-07 11:26:43,815 - src.modules.strategy.engine - INFO - 策略初始化完成
2025-05-07 11:26:43,815 - root - INFO - 策略循环开始运行
2025-05-07 11:26:43,818 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:43,818 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:44,833 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:44,834 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:45,843 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:45,845 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:46,854 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:46,855 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:47,864 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:47,865 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:48,797 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:26:48,798 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:26:48,798 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:26:48,798 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:26:48,874 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:48,876 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:49,887 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:26:49,891 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:26:50,413 - root - INFO - 接收到关闭信号: 2
2025-05-07 11:26:50,893 - root - INFO - 系统正在关闭...
2025-05-07 11:26:50,893 - src.modules.risk.monitor - INFO - 停止风险监控
2025-05-07 11:26:50,894 - src.modules.risk.monitor - INFO - 风险监控已停止
2025-05-07 11:26:50,894 - src.modules.market_data.service - INFO - 关闭市场数据服务
2025-05-07 11:26:50,897 - ccxt.base.exchange - WARNING - bybit requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2025-05-07 11:26:50,905 - asyncio - ERROR - Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x10ec6fc40>
2025-05-07 11:26:50,905 - asyncio - ERROR - Unclosed connector
connections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x10ec94ca0>, 674403.6985995), (<aiohttp.client_proto.ResponseHandler object at 0x10ecd86a0>, 674403.760380041), (<aiohttp.client_proto.ResponseHandler object at 0x10f3e4b20>, 674403.786154291), (<aiohttp.client_proto.ResponseHandler object at 0x10f3e4ee0>, 674403.803608583), (<aiohttp.client_proto.ResponseHandler object at 0x10ecd8ac0>, 674404.409518791), (<aiohttp.client_proto.ResponseHandler object at 0x10f3e51e0>, 674404.743673666)]']
connector: <aiohttp.connector.TCPConnector object at 0x10ec6fc70>
2025-05-07 11:26:50,968 - asyncio - ERROR - Fatal error on SSL transport
protocol: <asyncio.sslproto.SSLProtocol object at 0x10ec6f7f0>
transport: <_SelectorSocketTransport closing fd=11>
Traceback (most recent call last):
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/selector_events.py", line 924, in write
    n = self._sock.send(data)
OSError: [Errno 9] Bad file descriptor

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/sslproto.py", line 690, in _process_write_backlog
    self._transport.write(chunk)
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/selector_events.py", line 930, in write
    self._fatal_error(exc, 'Fatal write error on socket transport')
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/selector_events.py", line 725, in _fatal_error
    self._force_close(exc)
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/selector_events.py", line 737, in _force_close
    self._loop.call_soon(self._call_connection_lost, exc)
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py", line 753, in call_soon
    self._check_closed()
  File "/opt/homebrew/Cellar/python@3.10/3.10.16/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py", line 515, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
2025-05-07 11:27:18,199 - root - INFO - 系统初始化开始...
2025-05-07 11:27:18,199 - src.modules.account.manager - INFO - 将使用 bybit 作为主要交易所
2025-05-07 11:27:18,280 - src.modules.risk.monitor - INFO - 已初始化Telegram告警处理器
2025-05-07 11:27:18,280 - src.modules.risk.monitor - WARNING - 风险监控运行在开发模式下，部分功能可能被禁用
2025-05-07 11:27:18,284 - src.utils.metrics - INFO - Prometheus指标服务器已启动，端口: 9090
2025-05-07 11:27:18,284 - root - INFO - 系统初始化完成
2025-05-07 11:27:18,285 - root - INFO - 系统启动中...
2025-05-07 11:27:18,285 - src.modules.state.manager - INFO - 初始化状态管理器
2025-05-07 11:27:18,329 - src.modules.state.manager - ERROR - 初始化状态管理器失败: role "postgres" does not exist
2025-05-07 11:27:18,329 - src.modules.state.manager - WARNING - 将使用文件系统作为备用状态存储
2025-05-07 11:27:18,329 - src.modules.market_data.service - INFO - 初始化市场数据服务
2025-05-07 11:27:18,333 - src.modules.market_data.service - INFO - 成功连接交易所: binance
2025-05-07 11:27:18,337 - src.modules.market_data.service - INFO - 成功连接交易所: bybit
2025-05-07 11:27:18,337 - src.modules.account.manager - INFO - 初始化账户管理器
2025-05-07 11:27:18,337 - src.modules.account.manager - INFO - 跳过非主要交易所 binance 的初始化
2025-05-07 11:27:18,339 - src.modules.account.manager - INFO - 账户管理器成功连接交易所: bybit
2025-05-07 11:27:21,825 - src.modules.account.manager - INFO - 交易所 bybit 使用主账户: bybit_main
2025-05-07 11:27:21,825 - src.modules.execution.service - INFO - 初始化交易执行服务
2025-05-07 11:27:21,842 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: binance
2025-05-07 11:27:21,850 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: bybit
2025-05-07 11:27:21,851 - src.modules.risk.monitor - INFO - 开始风险监控
2025-05-07 11:27:21,851 - src.modules.risk.monitor - WARNING - 开发模式: 市场数据服务或账户管理器不可用，将使用模拟服务
2025-05-07 11:27:21,851 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟市场数据服务
2025-05-07 11:27:21,857 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟账户管理器
2025-05-07 11:27:21,857 - src.modules.risk.monitor - INFO - 风险监控已启动
2025-05-07 11:27:21,857 - src.modules.strategy.engine - INFO - 初始化资金费率套利策略
2025-05-07 11:27:21,858 - src.modules.risk.monitor - INFO - 风险监控循环已启动
2025-05-07 11:27:21,858 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:21,858 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:21,863 - src.modules.state.manager - ERROR - 加载策略状态失败: role "postgres" does not exist
2025-05-07 11:27:21,867 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:21,867 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:21,867 - src.modules.strategy.engine - INFO - 开始初始化子账户
2025-05-07 11:27:21,867 - src.modules.strategy.engine - INFO - 初始化账户 binance_sub_1，初始资金 10000 USDT
2025-05-07 11:27:21,867 - src.modules.account.manager - ERROR - 转移资产失败: 源账户 binance_main 不存在
2025-05-07 11:27:21,867 - src.modules.strategy.engine - ERROR - 初始化账户 binance_sub_1 失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:27:21,871 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:21,872 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:21,872 - src.modules.risk.monitor - ERROR - 账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:27:21,872 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:27:21,872 - src.modules.risk.monitor - INFO - 为账户 binance_sub_1 强制执行风险限制
2025-05-07 11:27:21,872 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:21,873 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:27:21,876 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:21,877 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:21,877 - src.modules.strategy.engine - INFO - 完成初始化 20 个子账户
2025-05-07 11:27:21,877 - src.modules.strategy.engine - INFO - 策略初始化完成
2025-05-07 11:27:21,877 - root - INFO - 策略循环开始运行
2025-05-07 11:27:21,880 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:21,881 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:22,890 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:22,892 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:23,900 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:23,901 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:24,911 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:24,912 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:25,922 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:25,924 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:26,859 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:26,859 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:26,860 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:26,860 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:26,932 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:26,934 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:27,942 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:27,944 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:28,953 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:28,955 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:29,967 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:29,969 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:30,978 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:30,979 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:31,860 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:31,861 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:31,861 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:31,861 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:31,988 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:31,989 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:32,998 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:32,999 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:34,009 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:34,011 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:35,022 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:35,023 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:36,036 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:36,037 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:36,862 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:36,862 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:36,863 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:36,863 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:37,046 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:37,047 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:38,057 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:38,058 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:39,063 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:39,063 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:40,073 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:40,075 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:41,084 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:41,085 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:41,864 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:41,864 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:41,864 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:41,864 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:42,096 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:42,097 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:43,106 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:43,108 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:44,117 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:44,118 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:45,128 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:45,129 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:46,139 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:46,140 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:46,865 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:46,866 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:46,866 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:46,866 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:47,150 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:47,151 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:48,160 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:48,161 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:49,171 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:49,172 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:50,182 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:50,183 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:51,192 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:51,193 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:51,868 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:51,868 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:51,868 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:51,868 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:52,207 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:52,208 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:53,218 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:53,219 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:54,228 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:54,230 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:55,240 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:55,241 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:56,248 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:56,248 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:56,869 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:27:56,870 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:27:56,870 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:27:56,870 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:27:57,255 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:57,255 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:58,263 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:58,264 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:27:59,275 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:27:59,276 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:00,285 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:00,286 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:01,297 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:01,299 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:01,872 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:01,873 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:01,873 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:01,873 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:02,311 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:02,313 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:03,322 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:03,323 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:04,330 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:04,331 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:05,340 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:05,342 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:06,353 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:06,354 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:06,874 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:06,875 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:06,875 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:06,875 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:07,362 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:07,363 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:08,369 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:08,370 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:09,380 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:09,381 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:10,387 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:10,388 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:11,399 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:11,400 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:11,876 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:11,876 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:11,877 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:11,877 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:12,409 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:12,410 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:13,422 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:13,424 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:14,434 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:14,435 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:15,445 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:15,447 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:16,458 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:16,460 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:16,878 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:16,879 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:16,879 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:16,879 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:17,469 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:17,470 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:18,476 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:18,476 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:19,483 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:19,484 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:20,496 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:20,498 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:21,507 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:21,509 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:21,880 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:21,880 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:21,881 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:21,881 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:22,516 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:22,517 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:23,525 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:23,525 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:24,532 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:24,532 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:25,543 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:25,544 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:26,554 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:26,556 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:26,882 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:26,882 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:26,882 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:26,882 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:27,561 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:27,562 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:28,568 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:28,569 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:29,575 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:29,576 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:30,583 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:30,584 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:31,591 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:31,591 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:31,883 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:31,883 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:31,884 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:31,884 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:32,597 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:32,598 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:33,603 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:33,603 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:34,610 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:34,611 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:35,618 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:35,619 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:36,625 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:36,625 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:36,885 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:36,885 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:36,885 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:36,885 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:37,632 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:37,633 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:38,640 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:38,641 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:39,646 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:39,646 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:40,719 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:40,720 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:41,728 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:41,729 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:41,887 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:41,888 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:41,888 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:41,888 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:42,734 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:42,735 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:43,745 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:43,747 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:44,753 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:44,753 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:45,764 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:45,765 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:46,778 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:46,780 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:46,890 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:46,890 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:46,890 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:46,890 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:47,786 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:47,786 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:48,798 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:48,799 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:49,809 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:49,811 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:50,821 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:50,822 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:51,833 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:51,834 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:51,892 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:51,892 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:51,892 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:51,892 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:52,842 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:52,842 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:53,853 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:53,854 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:54,865 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:54,866 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:55,876 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:55,878 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:56,890 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:56,891 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:56,892 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:28:56,893 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:28:56,893 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:28:56,893 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:28:57,898 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:57,899 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:58,910 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:58,912 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:28:59,923 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:28:59,924 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:00,935 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:00,936 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:01,895 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:29:01,895 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:29:01,895 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:29:01,896 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:29:01,946 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:01,947 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:02,958 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:02,960 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:03,969 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:03,971 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:04,980 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:04,981 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:05,991 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:05,993 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:06,897 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:29:06,897 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:29:06,898 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:29:06,898 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:29:07,002 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:07,004 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:08,014 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:08,015 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:09,027 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:09,031 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:10,041 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:10,041 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:11,051 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:29:11,053 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:29:11,574 - root - INFO - 接收到关闭信号: 2
2025-05-07 11:29:11,899 - root - INFO - 系统正在关闭...
2025-05-07 11:29:11,900 - src.modules.risk.monitor - INFO - 停止风险监控
2025-05-07 11:29:11,900 - src.modules.risk.monitor - INFO - 风险监控已停止
2025-05-07 11:29:11,900 - src.modules.market_data.service - INFO - 关闭市场数据服务
2025-05-07 11:29:12,057 - ccxt.base.exchange - WARNING - bybit requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2025-05-07 11:29:12,064 - asyncio - ERROR - Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x10eb6fc70>
2025-05-07 11:38:08,132 - root - INFO - 系统初始化开始...
2025-05-07 11:38:08,132 - src.modules.account.manager - INFO - 将使用 bybit 作为主要交易所
2025-05-07 11:38:08,240 - src.modules.risk.monitor - INFO - 已初始化Telegram告警处理器
2025-05-07 11:38:08,240 - src.modules.risk.monitor - WARNING - 风险监控运行在开发模式下，部分功能可能被禁用
2025-05-07 11:38:08,245 - src.utils.metrics - INFO - Prometheus指标服务器已启动，端口: 9090
2025-05-07 11:38:08,245 - root - INFO - 系统初始化完成
2025-05-07 11:38:08,245 - root - INFO - 系统启动中...
2025-05-07 11:38:08,245 - src.modules.state.manager - INFO - 初始化状态管理器
2025-05-07 11:38:08,300 - src.modules.state.manager - ERROR - 初始化状态管理器失败: role "postgres" does not exist
2025-05-07 11:38:08,300 - src.modules.state.manager - WARNING - 将使用文件系统作为备用状态存储
2025-05-07 11:38:08,300 - src.modules.market_data.service - INFO - 初始化市场数据服务
2025-05-07 11:38:08,304 - src.modules.market_data.service - INFO - 成功连接交易所: binance
2025-05-07 11:38:08,307 - src.modules.market_data.service - INFO - 成功连接交易所: bybit
2025-05-07 11:38:08,307 - src.modules.account.manager - INFO - 初始化账户管理器
2025-05-07 11:38:08,307 - src.modules.account.manager - INFO - 跳过非主要交易所 binance 的初始化
2025-05-07 11:38:08,310 - src.modules.account.manager - INFO - 账户管理器成功连接交易所: bybit
2025-05-07 11:38:11,685 - src.modules.account.manager - INFO - 交易所 bybit 使用主账户: bybit_main
2025-05-07 11:38:11,685 - src.modules.execution.service - INFO - 初始化交易执行服务
2025-05-07 11:38:11,690 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: binance
2025-05-07 11:38:11,693 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: bybit
2025-05-07 11:38:11,693 - src.modules.risk.monitor - INFO - 开始风险监控
2025-05-07 11:38:11,693 - src.modules.risk.monitor - WARNING - 开发模式: 市场数据服务或账户管理器不可用，将使用模拟服务
2025-05-07 11:38:11,693 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟市场数据服务
2025-05-07 11:38:11,699 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟账户管理器
2025-05-07 11:38:11,699 - src.modules.risk.monitor - INFO - 风险监控已启动
2025-05-07 11:38:11,699 - src.modules.strategy.engine - INFO - 初始化资金费率套利策略
2025-05-07 11:38:11,700 - src.modules.risk.monitor - INFO - 风险监控循环已启动
2025-05-07 11:38:11,700 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:11,700 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:11,704 - src.modules.state.manager - ERROR - 加载策略状态失败: role "postgres" does not exist
2025-05-07 11:38:11,706 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:11,707 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:11,707 - src.modules.strategy.engine - INFO - 开始初始化子账户
2025-05-07 11:38:11,707 - src.modules.strategy.engine - INFO - 初始化账户 binance_sub_1，初始资金 10000 USDT
2025-05-07 11:38:11,707 - src.modules.account.manager - ERROR - 转移资产失败: 源账户 binance_main 不存在
2025-05-07 11:38:11,707 - src.modules.strategy.engine - ERROR - 初始化账户 binance_sub_1 失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:38:11,710 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:11,710 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:11,710 - src.modules.risk.monitor - ERROR - 账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:38:11,710 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [ERROR] 2025-05-07 11:38:11
账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:38:11,710 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:38:11,710 - src.modules.risk.monitor - INFO - 为账户 binance_sub_1 强制执行风险限制
2025-05-07 11:38:11,710 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:11,710 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [WARNING] 2025-05-07 11:38:11
已为账户 binance_sub_1 执行风险限制措施，减仓50%
2025-05-07 11:38:11,710 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:38:11,713 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:11,713 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:11,713 - src.modules.strategy.engine - INFO - 完成初始化 20 个子账户
2025-05-07 11:38:11,713 - src.modules.strategy.engine - INFO - 策略初始化完成
2025-05-07 11:38:11,713 - root - INFO - 策略循环开始运行
2025-05-07 11:38:11,715 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:11,716 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:12,722 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:12,723 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:13,732 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:13,733 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:14,740 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:14,740 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:15,751 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:15,752 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:16,701 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:16,702 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:16,702 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:16,702 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:16,761 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:16,763 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:17,773 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:17,775 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:18,783 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:18,784 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:19,792 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:19,793 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:20,802 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:20,804 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:21,704 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:21,704 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:21,705 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:21,705 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:21,814 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:21,814 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:22,826 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:22,827 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:23,837 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:23,838 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:24,845 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:24,847 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:25,857 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:25,859 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:26,706 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:26,706 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:26,706 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:26,707 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:26,865 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:26,865 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:27,874 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:27,874 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:28,883 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:28,884 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:29,889 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:29,890 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:30,899 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:30,900 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:31,708 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:31,708 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:31,708 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:31,708 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:31,907 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:31,907 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:32,914 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:32,914 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:33,920 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:33,921 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:34,931 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:34,932 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:35,937 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:35,938 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:36,709 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:36,710 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:36,710 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:36,710 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:36,944 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:36,944 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:37,955 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:37,956 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:38,962 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:38,962 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:39,968 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:39,968 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:40,974 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:40,975 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:41,711 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:41,712 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:41,712 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:41,712 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:41,984 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:41,986 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:42,995 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:42,996 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:44,007 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:44,009 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:45,016 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:45,016 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:46,026 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:46,029 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:46,713 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:46,713 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:46,714 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:46,714 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:47,042 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:47,044 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:48,054 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:48,055 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:49,062 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:49,063 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:50,069 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:50,069 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:51,075 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:51,075 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:51,715 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:51,715 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:51,715 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:51,715 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:52,082 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:52,082 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:53,088 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:53,088 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:54,096 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:54,097 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:55,103 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:55,103 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:56,145 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:56,146 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:56,716 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:38:56,717 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:38:56,717 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:38:56,717 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:38:57,156 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:57,157 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:58,163 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:58,164 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:38:59,171 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:38:59,172 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:00,178 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:00,178 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:01,185 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:01,185 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:01,719 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:01,719 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:01,719 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:01,720 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:02,194 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:02,196 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:03,206 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:03,206 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:04,214 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:04,215 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:05,220 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:05,220 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:06,224 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:06,225 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:06,722 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:06,722 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:06,722 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:06,722 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:07,238 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:07,239 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:08,246 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:08,246 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:09,254 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:09,254 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:10,261 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:10,261 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:11,268 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:11,269 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:11,723 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:11,723 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:11,723 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:11,723 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:12,279 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:12,281 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:13,289 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:13,290 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:14,296 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:14,297 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:15,303 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:15,303 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:16,314 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:16,316 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:16,725 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:16,725 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:16,725 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:16,725 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:17,326 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:17,328 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:18,342 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:18,344 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:19,353 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:19,354 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:20,360 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:20,361 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:21,373 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:21,374 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:21,726 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:21,727 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:21,727 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:21,728 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:22,383 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:22,384 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:23,391 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:23,391 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:24,398 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:24,398 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:25,403 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:25,404 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:26,411 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:26,413 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:26,729 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:26,730 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:26,730 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:26,730 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:27,422 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:27,424 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:28,430 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:28,431 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:29,437 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:29,438 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:30,444 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:30,445 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:31,454 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:31,456 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:31,732 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:31,732 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:31,732 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:31,732 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:32,466 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:32,468 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:33,477 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:33,478 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:34,483 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:34,483 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:35,489 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:35,490 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:36,497 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:36,498 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:36,733 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:36,733 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:36,733 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:36,733 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:37,503 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:37,504 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:38,508 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:38,508 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:38,765 - root - INFO - 系统初始化开始...
2025-05-07 11:39:38,766 - src.modules.account.manager - INFO - 将使用 bybit 作为主要交易所
2025-05-07 11:39:38,872 - src.modules.risk.monitor - INFO - 已初始化Telegram告警处理器
2025-05-07 11:39:38,872 - src.modules.risk.monitor - WARNING - 风险监控运行在开发模式下，部分功能可能被禁用
2025-05-07 11:39:38,872 - src.utils.metrics - ERROR - 启动Prometheus指标服务器失败: [Errno 48] Address already in use
2025-05-07 11:39:38,873 - root - INFO - 系统初始化完成
2025-05-07 11:39:38,873 - root - INFO - 系统启动中...
2025-05-07 11:39:38,873 - src.modules.state.manager - INFO - 初始化状态管理器
2025-05-07 11:39:38,873 - src.modules.state.manager - INFO - 开始连接数据库...
2025-05-07 11:39:38,873 - src.modules.state.manager - INFO - 数据库连接URL: postgresql+asyncpg://lambertlin:******@localhost:5432/zeropy_funding
2025-05-07 11:39:38,943 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-05-07 11:39:38,943 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:39:38,945 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-05-07 11:39:38,945 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:39:38,945 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-05-07 11:39:38,945 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:39:38,946 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:38,948 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:39:38,948 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('account_states', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:39:38,952 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:39:38,952 - sqlalchemy.engine.Engine - INFO - [cached since 0.004592s ago] ('transactions', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - [cached since 0.005017s ago] ('orders', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - [cached since 0.005267s ago] ('strategy_states', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE account_states (
	account_id VARCHAR(50) NOT NULL, 
	status VARCHAR(20) NOT NULL, 
	balance JSON NOT NULL, 
	positions JSON, 
	leverage_info JSON, 
	entry_data JSON, 
	next_account_id VARCHAR(50), 
	updated_at TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (account_id)
)


2025-05-07 11:39:38,953 - sqlalchemy.engine.Engine - INFO - [no key 0.00004s] ()
2025-05-07 11:39:38,977 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE transactions (
	id SERIAL NOT NULL, 
	account_id VARCHAR(50) NOT NULL, 
	type VARCHAR(30) NOT NULL, 
	symbol VARCHAR(20), 
	amount NUMERIC(20, 8) NOT NULL, 
	price NUMERIC(20, 8), 
	fee NUMERIC(20, 8), 
	timestamp TIMESTAMP WITH TIME ZONE, 
	metadata JSON, 
	PRIMARY KEY (id)
)


2025-05-07 11:39:38,979 - sqlalchemy.engine.Engine - INFO - [no key 0.00243s] ()
2025-05-07 11:39:39,000 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE orders (
	order_id VARCHAR(50) NOT NULL, 
	account_id VARCHAR(50) NOT NULL, 
	symbol VARCHAR(20) NOT NULL, 
	side VARCHAR(10) NOT NULL, 
	type VARCHAR(10) NOT NULL, 
	amount NUMERIC(20, 8) NOT NULL, 
	price NUMERIC(20, 8), 
	status VARCHAR(10) NOT NULL, 
	filled NUMERIC(20, 8), 
	remaining NUMERIC(20, 8), 
	created_at TIMESTAMP WITH TIME ZONE, 
	updated_at TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (order_id)
)


2025-05-07 11:39:39,000 - sqlalchemy.engine.Engine - INFO - [no key 0.00014s] ()
2025-05-07 11:39:39,003 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE strategy_states (
	id SERIAL NOT NULL, 
	strategy_id VARCHAR(50) NOT NULL, 
	is_active BOOLEAN, 
	accounts_status JSON, 
	started_at TIMESTAMP WITH TIME ZONE, 
	last_updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (strategy_id)
)


2025-05-07 11:39:39,003 - sqlalchemy.engine.Engine - INFO - [no key 0.00010s] ()
2025-05-07 11:39:39,008 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:39:39,010 - src.modules.state.manager - INFO - 成功连接到TimescaleDB
2025-05-07 11:39:39,050 - src.modules.state.manager - INFO - 成功连接到Redis
2025-05-07 11:39:39,050 - src.modules.state.manager - INFO - 状态管理器初始化完成
2025-05-07 11:39:39,050 - src.modules.market_data.service - INFO - 初始化市场数据服务
2025-05-07 11:39:39,055 - src.modules.market_data.service - INFO - 成功连接交易所: binance
2025-05-07 11:39:39,058 - src.modules.market_data.service - INFO - 成功连接交易所: bybit
2025-05-07 11:39:39,058 - src.modules.account.manager - INFO - 初始化账户管理器
2025-05-07 11:39:39,058 - src.modules.account.manager - INFO - 跳过非主要交易所 binance 的初始化
2025-05-07 11:39:39,061 - src.modules.account.manager - INFO - 账户管理器成功连接交易所: bybit
2025-05-07 11:39:39,519 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:39,521 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:40,526 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:40,527 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:41,532 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:41,533 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:41,735 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:41,735 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:41,735 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:41,735 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:42,390 - src.modules.account.manager - INFO - 交易所 bybit 使用主账户: bybit_main
2025-05-07 11:39:42,390 - src.modules.execution.service - INFO - 初始化交易执行服务
2025-05-07 11:39:42,405 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: binance
2025-05-07 11:39:42,412 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: bybit
2025-05-07 11:39:42,412 - src.modules.risk.monitor - INFO - 开始风险监控
2025-05-07 11:39:42,412 - src.modules.risk.monitor - WARNING - 开发模式: 市场数据服务或账户管理器不可用，将使用模拟服务
2025-05-07 11:39:42,412 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟市场数据服务
2025-05-07 11:39:42,422 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟账户管理器
2025-05-07 11:39:42,422 - src.modules.risk.monitor - INFO - 风险监控已启动
2025-05-07 11:39:42,422 - src.modules.strategy.engine - INFO - 初始化资金费率套利策略
2025-05-07 11:39:42,422 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:42,423 - sqlalchemy.engine.Engine - INFO - SELECT * FROM strategy_states WHERE strategy_id = $1
2025-05-07 11:39:42,423 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ('funding_strategy',)
2025-05-07 11:39:42,423 - src.modules.risk.monitor - INFO - 风险监控循环已启动
2025-05-07 11:39:42,423 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:42,423 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:42,426 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:42,427 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:42,427 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:42,427 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('funding_strategy', False, {}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 427517))
2025-05-07 11:39:42,429 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:42,429 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {} (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 427517))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:42,429 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:42,429 - src.modules.strategy.engine - INFO - 开始初始化子账户
2025-05-07 11:39:42,430 - src.modules.strategy.engine - INFO - 初始化账户 binance_sub_1，初始资金 10000 USDT
2025-05-07 11:39:42,430 - src.modules.account.manager - ERROR - 转移资产失败: 源账户 binance_main 不存在
2025-05-07 11:39:42,430 - src.modules.strategy.engine - ERROR - 初始化账户 binance_sub_1 失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:39:42,430 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:42,430 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:42,430 - sqlalchemy.engine.Engine - INFO - [cached since 0.002541s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 430119))
2025-05-07 11:39:42,430 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:42,431 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 430119))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:42,431 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:42,431 - src.modules.risk.monitor - ERROR - 账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:39:42,431 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [ERROR] 2025-05-07 11:39:42
账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:39:42,431 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:39:42,431 - src.modules.risk.monitor - INFO - 为账户 binance_sub_1 强制执行风险限制
2025-05-07 11:39:42,431 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:42,431 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [WARNING] 2025-05-07 11:39:42
已为账户 binance_sub_1 执行风险限制措施，减仓50%
2025-05-07 11:39:42,431 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:39:42,431 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:42,431 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:42,431 - sqlalchemy.engine.Engine - INFO - [cached since 0.003989s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 431596))
2025-05-07 11:39:42,432 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:42,432 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 431596))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:42,433 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:42,433 - src.modules.strategy.engine - INFO - 完成初始化 20 个子账户
2025-05-07 11:39:42,433 - src.modules.strategy.engine - INFO - 策略初始化完成
2025-05-07 11:39:42,433 - root - INFO - 策略循环开始运行
2025-05-07 11:39:42,433 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:42,433 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:42,433 - sqlalchemy.engine.Engine - INFO - [cached since 0.005898s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 433479))
2025-05-07 11:39:42,434 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:42,434 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 42, 433479))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:42,434 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:42,537 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:42,538 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:43,436 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:43,438 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:43,438 - sqlalchemy.engine.Engine - INFO - [cached since 1.011s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 43, 436216))
2025-05-07 11:39:43,440 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:43,441 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 43, 436216))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:43,444 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:43,551 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:43,553 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:44,445 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:44,445 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:44,445 - sqlalchemy.engine.Engine - INFO - [cached since 2.018s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 44, 445558))
2025-05-07 11:39:44,446 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:44,446 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 44, 445558))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:44,447 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:44,560 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:44,560 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:45,449 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:45,450 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:45,450 - sqlalchemy.engine.Engine - INFO - [cached since 3.023s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 45, 448918))
2025-05-07 11:39:45,452 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:45,453 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 45, 448918))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:45,454 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:45,564 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:45,564 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:46,455 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:46,456 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:46,456 - sqlalchemy.engine.Engine - INFO - [cached since 4.029s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 46, 454985))
2025-05-07 11:39:46,458 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:46,459 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 46, 454985))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:46,461 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:46,571 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:46,571 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:46,736 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:46,736 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:46,736 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:46,736 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:47,424 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:47,424 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:47,425 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:47,425 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:47,462 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:47,463 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:47,464 - sqlalchemy.engine.Engine - INFO - [cached since 5.036s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 47, 462377))
2025-05-07 11:39:47,466 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:47,467 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 47, 462377))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:47,468 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:47,589 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:47,591 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:48,469 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:48,470 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:48,471 - sqlalchemy.engine.Engine - INFO - [cached since 6.043s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 48, 469257))
2025-05-07 11:39:48,473 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:48,474 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 48, 469257))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:48,475 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:48,595 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:48,595 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:49,476 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:49,477 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:49,477 - sqlalchemy.engine.Engine - INFO - [cached since 7.049s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 49, 476011))
2025-05-07 11:39:49,478 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:49,478 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 49, 476011))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:49,479 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:49,602 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:49,602 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:50,481 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:50,482 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:50,482 - sqlalchemy.engine.Engine - INFO - [cached since 8.055s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 50, 480865))
2025-05-07 11:39:50,484 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:50,485 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 50, 480865))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:50,486 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:50,610 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:50,610 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:51,488 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:51,489 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:51,489 - sqlalchemy.engine.Engine - INFO - [cached since 9.062s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 51, 488062))
2025-05-07 11:39:51,491 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:51,492 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 51, 488062))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:51,493 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:51,615 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:51,616 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:51,737 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:51,738 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:51,738 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:51,738 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:52,426 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:52,427 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:52,427 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:52,427 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:52,495 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:52,496 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:52,496 - sqlalchemy.engine.Engine - INFO - [cached since 10.07s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 52, 495376))
2025-05-07 11:39:52,498 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:52,501 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 52, 495376))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:52,503 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:52,622 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:52,622 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:53,504 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:53,505 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:53,505 - sqlalchemy.engine.Engine - INFO - [cached since 11.08s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 53, 504374))
2025-05-07 11:39:53,507 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:53,508 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 53, 504374))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:53,509 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:53,629 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:53,629 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:54,509 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:54,510 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:54,510 - sqlalchemy.engine.Engine - INFO - [cached since 12.08s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 54, 509838))
2025-05-07 11:39:54,510 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:54,510 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 54, 509838))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:54,511 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:54,635 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:54,636 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:55,513 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:55,514 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:55,514 - sqlalchemy.engine.Engine - INFO - [cached since 13.09s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 55, 512857))
2025-05-07 11:39:55,516 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:55,518 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 55, 512857))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:55,521 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:55,643 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:55,643 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:56,523 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:56,524 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:56,524 - sqlalchemy.engine.Engine - INFO - [cached since 14.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 56, 522580))
2025-05-07 11:39:56,526 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:56,527 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 56, 522580))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:56,528 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:56,674 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:56,674 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:56,739 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:56,739 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:56,739 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:56,739 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:57,428 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:39:57,428 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:39:57,428 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:39:57,428 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:39:57,530 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:57,530 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:57,530 - sqlalchemy.engine.Engine - INFO - [cached since 15.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 57, 530232))
2025-05-07 11:39:57,536 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:57,537 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 57, 530232))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:57,538 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:57,680 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:57,681 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:58,540 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:58,541 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:58,541 - sqlalchemy.engine.Engine - INFO - [cached since 16.11s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 58, 540156))
2025-05-07 11:39:58,542 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:58,543 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 58, 540156))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:58,544 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:58,686 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:58,686 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:59,545 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:39:59,546 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:39:59,546 - sqlalchemy.engine.Engine - INFO - [cached since 17.12s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 59, 545019))
2025-05-07 11:39:59,547 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:39:59,548 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 39, 59, 545019))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:39:59,548 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:39:59,694 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:39:59,694 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:00,550 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:00,551 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:00,552 - sqlalchemy.engine.Engine - INFO - [cached since 18.12s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 0, 550315))
2025-05-07 11:40:00,553 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:00,554 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 0, 550315))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:00,555 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:00,700 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:00,701 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:01,558 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:01,558 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:01,559 - sqlalchemy.engine.Engine - INFO - [cached since 19.13s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 1, 557483))
2025-05-07 11:40:01,560 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:01,561 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 1, 557483))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:01,562 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:01,706 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:01,706 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:01,740 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:01,740 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:01,740 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:01,740 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:02,430 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:02,430 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:02,430 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:02,430 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:02,563 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:02,564 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:02,564 - sqlalchemy.engine.Engine - INFO - [cached since 20.14s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 2, 563814))
2025-05-07 11:40:02,564 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:02,565 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 2, 563814))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:02,565 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:02,712 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:02,712 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:03,567 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:03,567 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:03,567 - sqlalchemy.engine.Engine - INFO - [cached since 21.14s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 3, 566915))
2025-05-07 11:40:03,569 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:03,570 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 3, 566915))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:03,570 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:03,718 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:03,719 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:04,572 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:04,572 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:04,572 - sqlalchemy.engine.Engine - INFO - [cached since 22.14s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 4, 571991))
2025-05-07 11:40:04,573 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:04,573 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 4, 571991))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:04,574 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:04,725 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:04,725 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:05,576 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:05,577 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:05,577 - sqlalchemy.engine.Engine - INFO - [cached since 23.15s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 5, 575805))
2025-05-07 11:40:05,579 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:05,580 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 5, 575805))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:05,581 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:05,730 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:05,731 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:06,583 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:06,583 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:06,583 - sqlalchemy.engine.Engine - INFO - [cached since 24.16s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 6, 583141))
2025-05-07 11:40:06,584 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:06,585 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 6, 583141))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:06,585 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:06,737 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:06,738 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:06,741 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:06,741 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:06,741 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:06,741 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:07,430 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:07,431 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:07,431 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:07,431 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:07,587 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:07,587 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:07,587 - sqlalchemy.engine.Engine - INFO - [cached since 25.16s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 7, 587156))
2025-05-07 11:40:07,588 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:07,588 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 7, 587156))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:07,589 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:07,744 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:07,744 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:08,594 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:08,594 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:08,594 - sqlalchemy.engine.Engine - INFO - [cached since 26.17s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 8, 594080))
2025-05-07 11:40:08,595 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:08,595 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 8, 594080))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:08,595 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:08,750 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:08,751 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:09,597 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:09,597 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:09,597 - sqlalchemy.engine.Engine - INFO - [cached since 27.17s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 9, 596865))
2025-05-07 11:40:09,598 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:09,598 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 9, 596865))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:09,599 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:09,757 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:09,757 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:10,600 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:10,601 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:10,603 - sqlalchemy.engine.Engine - INFO - [cached since 28.18s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 10, 600523))
2025-05-07 11:40:10,604 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:10,606 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 10, 600523))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:10,607 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:10,764 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:10,764 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:11,608 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:11,608 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:11,608 - sqlalchemy.engine.Engine - INFO - [cached since 29.18s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 11, 608069))
2025-05-07 11:40:11,609 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:11,610 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 11, 608069))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:11,610 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:11,741 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:11,742 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:11,742 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:11,742 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:11,771 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:11,771 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:12,433 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:12,433 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:12,433 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:12,433 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:12,611 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:12,611 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:12,611 - sqlalchemy.engine.Engine - INFO - [cached since 30.18s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 12, 611200))
2025-05-07 11:40:12,612 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:12,612 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 12, 611200))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:12,613 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:12,778 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:12,778 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:13,614 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:13,614 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:13,615 - sqlalchemy.engine.Engine - INFO - [cached since 31.19s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 13, 614599))
2025-05-07 11:40:13,615 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:13,615 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 13, 614599))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:13,616 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:13,784 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:13,785 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:14,617 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:14,619 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:14,619 - sqlalchemy.engine.Engine - INFO - [cached since 32.19s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 14, 617519))
2025-05-07 11:40:14,621 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:14,621 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 14, 617519))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:14,622 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:14,790 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:14,791 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:15,623 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:15,623 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:15,623 - sqlalchemy.engine.Engine - INFO - [cached since 33.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 15, 623528))
2025-05-07 11:40:15,624 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:15,625 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 15, 623528))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:15,625 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:15,796 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:15,797 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:16,626 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:16,626 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:16,626 - sqlalchemy.engine.Engine - INFO - [cached since 34.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 16, 626263))
2025-05-07 11:40:16,627 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:16,627 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 16, 626263))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:16,628 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:16,743 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:16,743 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:16,743 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:16,743 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:16,803 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:16,804 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:17,435 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:17,436 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:17,436 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:17,436 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:17,629 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:17,629 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:17,629 - sqlalchemy.engine.Engine - INFO - [cached since 35.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 17, 629300))
2025-05-07 11:40:17,630 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:17,630 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 17, 629300))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:17,631 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:17,810 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:17,810 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:18,632 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:18,632 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:18,632 - sqlalchemy.engine.Engine - INFO - [cached since 36.21s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 18, 632345))
2025-05-07 11:40:18,633 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:18,633 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 18, 632345))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:18,634 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:18,817 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:18,817 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:19,635 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:19,636 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:19,636 - sqlalchemy.engine.Engine - INFO - [cached since 37.21s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 19, 635446))
2025-05-07 11:40:19,637 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:19,638 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 19, 635446))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:19,639 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:19,823 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:19,824 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:20,641 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:20,641 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:20,642 - sqlalchemy.engine.Engine - INFO - [cached since 38.21s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 20, 640745))
2025-05-07 11:40:20,644 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:20,645 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 20, 640745))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:20,647 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:20,829 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:20,830 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:21,649 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:21,649 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:21,649 - sqlalchemy.engine.Engine - INFO - [cached since 39.22s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 21, 648751))
2025-05-07 11:40:21,650 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:21,650 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 21, 648751))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:21,651 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:21,744 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:21,745 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:21,745 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:21,745 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:21,835 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:21,835 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:22,437 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:22,437 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:22,437 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:22,437 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:22,652 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:22,653 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:22,653 - sqlalchemy.engine.Engine - INFO - [cached since 40.23s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 22, 652712))
2025-05-07 11:40:22,653 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:22,654 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 22, 652712))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:22,654 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:22,841 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:22,841 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:23,655 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:23,655 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:23,655 - sqlalchemy.engine.Engine - INFO - [cached since 41.23s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 23, 655189))
2025-05-07 11:40:23,656 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:23,656 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 23, 655189))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:23,656 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:23,853 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:23,853 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:24,657 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:24,657 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:24,657 - sqlalchemy.engine.Engine - INFO - [cached since 42.23s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 24, 657175))
2025-05-07 11:40:24,658 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:24,658 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 24, 657175))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:24,658 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:24,859 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:24,860 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:25,662 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:25,668 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:25,669 - sqlalchemy.engine.Engine - INFO - [cached since 43.24s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 25, 662597))
2025-05-07 11:40:25,670 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:25,670 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 25, 662597))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:25,670 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:25,864 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:25,865 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:26,672 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:26,673 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:26,673 - sqlalchemy.engine.Engine - INFO - [cached since 44.25s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 26, 672181))
2025-05-07 11:40:26,675 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:26,676 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 26, 672181))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:26,677 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:26,747 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:26,747 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:26,747 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:26,747 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:26,869 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:26,869 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:27,439 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:27,440 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:27,440 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:27,441 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:27,678 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:27,679 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:27,679 - sqlalchemy.engine.Engine - INFO - [cached since 45.25s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 27, 678597))
2025-05-07 11:40:27,679 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:27,680 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 27, 678597))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:27,680 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:27,875 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:27,876 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:28,682 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:28,682 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:28,682 - sqlalchemy.engine.Engine - INFO - [cached since 46.25s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 28, 682081))
2025-05-07 11:40:28,683 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:28,683 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 28, 682081))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:28,683 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:28,882 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:28,882 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:29,684 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:29,685 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:29,685 - sqlalchemy.engine.Engine - INFO - [cached since 47.26s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 29, 684585))
2025-05-07 11:40:29,685 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:29,686 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 29, 684585))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:29,686 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:29,886 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:29,887 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:30,687 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:30,687 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:30,687 - sqlalchemy.engine.Engine - INFO - [cached since 48.26s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 30, 687539))
2025-05-07 11:40:30,688 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:30,689 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 30, 687539))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:30,689 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:30,892 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:30,892 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:31,690 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:31,691 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:31,691 - sqlalchemy.engine.Engine - INFO - [cached since 49.26s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 31, 690640))
2025-05-07 11:40:31,692 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:31,693 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 31, 690640))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:31,694 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:31,748 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:31,749 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:31,749 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:31,749 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:31,904 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:31,905 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:32,442 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:32,442 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:32,442 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:32,442 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:32,694 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:32,695 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:32,695 - sqlalchemy.engine.Engine - INFO - [cached since 50.27s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 32, 694763))
2025-05-07 11:40:32,695 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:32,695 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 32, 694763))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:32,696 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:32,910 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:32,910 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:33,697 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:33,697 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:33,697 - sqlalchemy.engine.Engine - INFO - [cached since 51.27s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 33, 696881))
2025-05-07 11:40:33,697 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:33,698 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 33, 696881))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:33,698 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:33,915 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:33,915 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:34,700 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:34,700 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:34,701 - sqlalchemy.engine.Engine - INFO - [cached since 52.27s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 34, 699752))
2025-05-07 11:40:34,703 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:34,704 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 34, 699752))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:34,706 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:34,920 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:34,921 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:35,707 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:35,707 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:35,707 - sqlalchemy.engine.Engine - INFO - [cached since 53.28s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 35, 707213))
2025-05-07 11:40:35,708 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:35,709 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 35, 707213))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:35,710 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:35,928 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:35,928 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:36,711 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:36,711 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:36,712 - sqlalchemy.engine.Engine - INFO - [cached since 54.28s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 36, 711102))
2025-05-07 11:40:36,713 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:36,713 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 36, 711102))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:36,714 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:36,750 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:36,750 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:36,750 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:36,750 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:36,935 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:36,935 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:37,443 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:37,444 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:37,444 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:37,444 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:37,716 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:37,716 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:37,716 - sqlalchemy.engine.Engine - INFO - [cached since 55.29s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 37, 715809))
2025-05-07 11:40:37,717 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:37,717 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 37, 715809))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:37,718 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:37,942 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:37,942 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:38,719 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:38,720 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:38,720 - sqlalchemy.engine.Engine - INFO - [cached since 56.29s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 38, 719775))
2025-05-07 11:40:38,720 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:38,720 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 38, 719775))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:38,721 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:38,949 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:38,950 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:39,723 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:39,724 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:39,724 - sqlalchemy.engine.Engine - INFO - [cached since 57.3s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 39, 722686))
2025-05-07 11:40:39,726 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:39,726 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 39, 722686))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:39,728 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:39,957 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:39,958 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:40,729 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:40,729 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:40,729 - sqlalchemy.engine.Engine - INFO - [cached since 58.3s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 40, 729386))
2025-05-07 11:40:40,730 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:40,731 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 40, 729386))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:40,731 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:40,965 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:40,966 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:41,733 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:41,734 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:41,734 - sqlalchemy.engine.Engine - INFO - [cached since 59.31s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 41, 733063))
2025-05-07 11:40:41,736 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:41,737 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 41, 733063))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:41,738 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:41,751 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:41,752 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:41,752 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:41,753 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:41,976 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:41,977 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:42,446 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:42,446 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:42,447 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:42,447 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:42,741 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:42,741 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:42,742 - sqlalchemy.engine.Engine - INFO - [cached since 60.31s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 42, 740599))
2025-05-07 11:40:42,743 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:42,744 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 42, 740599))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:42,745 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:42,985 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:42,986 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:43,747 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:43,747 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:43,747 - sqlalchemy.engine.Engine - INFO - [cached since 61.32s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 43, 747001))
2025-05-07 11:40:43,748 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:43,748 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 43, 747001))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:43,749 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:43,999 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:44,001 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:44,749 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:44,750 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:44,750 - sqlalchemy.engine.Engine - INFO - [cached since 62.32s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 44, 749538))
2025-05-07 11:40:44,751 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:44,751 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 44, 749538))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:44,752 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:45,009 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:45,009 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:45,753 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:45,754 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:45,754 - sqlalchemy.engine.Engine - INFO - [cached since 63.33s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 45, 753608))
2025-05-07 11:40:45,754 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:45,755 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 45, 753608))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:45,755 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:46,015 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:46,015 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:46,754 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:46,754 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:46,754 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:46,755 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:46,757 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:46,758 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:46,758 - sqlalchemy.engine.Engine - INFO - [cached since 64.33s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 46, 757000))
2025-05-07 11:40:46,759 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:46,760 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 46, 757000))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:46,761 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:47,021 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:47,022 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:47,449 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:47,449 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:47,449 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:47,449 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:47,762 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:47,762 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:47,762 - sqlalchemy.engine.Engine - INFO - [cached since 65.33s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 47, 762077))
2025-05-07 11:40:47,763 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:47,763 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 47, 762077))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:47,764 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:48,030 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:48,030 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:48,765 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:48,765 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:48,765 - sqlalchemy.engine.Engine - INFO - [cached since 66.34s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 48, 765258))
2025-05-07 11:40:48,766 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:48,766 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 48, 765258))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:48,767 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:49,037 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:49,038 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:49,768 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:49,769 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:49,769 - sqlalchemy.engine.Engine - INFO - [cached since 67.34s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 49, 768568))
2025-05-07 11:40:49,769 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:49,770 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 49, 768568))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:49,770 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:50,042 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:50,042 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:50,771 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:50,771 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:50,771 - sqlalchemy.engine.Engine - INFO - [cached since 68.34s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 50, 771450))
2025-05-07 11:40:50,772 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:50,772 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 50, 771450))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:50,772 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:51,054 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:51,054 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:51,242 - root - INFO - 系统初始化开始...
2025-05-07 11:40:51,242 - src.modules.account.manager - INFO - 将使用 bybit 作为主要交易所
2025-05-07 11:40:51,349 - src.modules.risk.monitor - INFO - 已初始化Telegram告警处理器
2025-05-07 11:40:51,349 - src.modules.risk.monitor - WARNING - 风险监控运行在开发模式下，部分功能可能被禁用
2025-05-07 11:40:51,349 - src.utils.metrics - ERROR - 启动Prometheus指标服务器失败: [Errno 48] Address already in use
2025-05-07 11:40:51,349 - root - INFO - 系统初始化完成
2025-05-07 11:40:51,349 - root - INFO - 系统启动中...
2025-05-07 11:40:51,349 - src.modules.state.manager - INFO - 初始化状态管理器
2025-05-07 11:40:51,349 - src.modules.state.manager - INFO - 开始连接数据库...
2025-05-07 11:40:51,349 - src.modules.state.manager - INFO - 数据库连接URL: postgresql+asyncpg://lambertlin:******@localhost:5432/zeropy_funding
2025-05-07 11:40:51,408 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-05-07 11:40:51,408 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:40:51,409 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-05-07 11:40:51,409 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:40:51,409 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-05-07 11:40:51,409 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-07 11:40:51,410 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:51,412 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:40:51,412 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('account_states', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:40:51,414 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:40:51,414 - sqlalchemy.engine.Engine - INFO - [cached since 0.002848s ago] ('transactions', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:40:51,415 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:40:51,415 - sqlalchemy.engine.Engine - INFO - [cached since 0.003312s ago] ('orders', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:40:51,415 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-05-07 11:40:51,415 - sqlalchemy.engine.Engine - INFO - [cached since 0.003725s ago] ('strategy_states', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-05-07 11:40:51,416 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:51,416 - src.modules.state.manager - INFO - 成功连接到TimescaleDB
2025-05-07 11:40:51,433 - src.modules.state.manager - INFO - 成功连接到Redis
2025-05-07 11:40:51,434 - src.modules.state.manager - INFO - 状态管理器初始化完成
2025-05-07 11:40:51,434 - src.modules.market_data.service - INFO - 初始化市场数据服务
2025-05-07 11:40:51,438 - src.modules.market_data.service - INFO - 成功连接交易所: binance
2025-05-07 11:40:51,441 - src.modules.market_data.service - INFO - 成功连接交易所: bybit
2025-05-07 11:40:51,441 - src.modules.account.manager - INFO - 初始化账户管理器
2025-05-07 11:40:51,441 - src.modules.account.manager - INFO - 跳过非主要交易所 binance 的初始化
2025-05-07 11:40:51,444 - src.modules.account.manager - INFO - 账户管理器成功连接交易所: bybit
2025-05-07 11:40:51,756 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:51,756 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:51,756 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:51,756 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:51,774 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:51,774 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:51,774 - sqlalchemy.engine.Engine - INFO - [cached since 69.35s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 51, 774175))
2025-05-07 11:40:51,775 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:51,775 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 51, 774175))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:51,776 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:52,061 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:52,061 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:52,450 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:52,451 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:52,451 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:52,451 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:52,777 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:52,777 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:52,777 - sqlalchemy.engine.Engine - INFO - [cached since 70.35s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 52, 776938))
2025-05-07 11:40:52,778 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:52,778 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 52, 776938))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:52,778 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:53,069 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:53,069 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:53,779 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:53,780 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:53,780 - sqlalchemy.engine.Engine - INFO - [cached since 71.35s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 53, 779600))
2025-05-07 11:40:53,780 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:53,781 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 53, 779600))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:53,781 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:54,074 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:54,075 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:54,784 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,785 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:54,785 - sqlalchemy.engine.Engine - INFO - [cached since 72.36s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 54, 783378))
2025-05-07 11:40:54,787 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:54,788 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 54, 783378))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:54,790 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:54,807 - src.modules.account.manager - INFO - 交易所 bybit 使用主账户: bybit_main
2025-05-07 11:40:54,808 - src.modules.execution.service - INFO - 初始化交易执行服务
2025-05-07 11:40:54,824 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: binance
2025-05-07 11:40:54,832 - src.modules.execution.service - INFO - 交易执行服务成功连接交易所: bybit
2025-05-07 11:40:54,832 - src.modules.risk.monitor - INFO - 开始风险监控
2025-05-07 11:40:54,832 - src.modules.risk.monitor - WARNING - 开发模式: 市场数据服务或账户管理器不可用，将使用模拟服务
2025-05-07 11:40:54,832 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟市场数据服务
2025-05-07 11:40:54,840 - src.modules.risk.monitor - WARNING - 开发模式: 使用模拟账户管理器
2025-05-07 11:40:54,841 - src.modules.risk.monitor - INFO - 风险监控已启动
2025-05-07 11:40:54,841 - src.modules.strategy.engine - INFO - 初始化资金费率套利策略
2025-05-07 11:40:54,842 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,842 - sqlalchemy.engine.Engine - INFO - SELECT * FROM strategy_states WHERE strategy_id = $1
2025-05-07 11:40:54,842 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('funding_strategy',)
2025-05-07 11:40:54,842 - src.modules.risk.monitor - INFO - 风险监控循环已启动
2025-05-07 11:40:54,842 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:54,842 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:54,845 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:54,845 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,846 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:54,846 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('funding_strategy', False, '{}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 54, 845691))
2025-05-07 11:40:54,849 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:54,850 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:54,850 - src.modules.strategy.engine - INFO - 开始初始化子账户
2025-05-07 11:40:54,850 - src.modules.strategy.engine - INFO - 初始化账户 binance_sub_1，初始资金 10000 USDT
2025-05-07 11:40:54,851 - src.modules.account.manager - ERROR - 转移资产失败: 源账户 binance_main 不存在
2025-05-07 11:40:54,851 - src.modules.strategy.engine - ERROR - 初始化账户 binance_sub_1 失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:40:54,851 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,851 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:54,851 - sqlalchemy.engine.Engine - INFO - [cached since 0.005477s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 54, 851223))
2025-05-07 11:40:54,852 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:54,852 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:54,852 - src.modules.risk.monitor - ERROR - 账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:40:54,852 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [ERROR] 2025-05-07 11:40:54
账户 binance_sub_1 发生错误: 初始化失败: 从主账户转入资金到 binance_sub_1 失败
2025-05-07 11:40:54,853 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:40:54,853 - src.modules.risk.monitor - INFO - 为账户 binance_sub_1 强制执行风险限制
2025-05-07 11:40:54,853 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:54,853 - src.utils.alerts - INFO - 开发模式: 模拟发送Telegram告警: [WARNING] 2025-05-07 11:40:54
已为账户 binance_sub_1 执行风险限制措施，减仓50%
2025-05-07 11:40:54,853 - src.modules.risk.monitor - INFO - 已通过 telegram 发送告警
2025-05-07 11:40:54,853 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,853 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:54,853 - sqlalchemy.engine.Engine - INFO - [cached since 0.007435s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 54, 853201))
2025-05-07 11:40:54,854 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:54,854 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:54,854 - src.modules.strategy.engine - INFO - 完成初始化 20 个子账户
2025-05-07 11:40:54,854 - src.modules.strategy.engine - INFO - 策略初始化完成
2025-05-07 11:40:54,854 - root - INFO - 策略循环开始运行
2025-05-07 11:40:54,854 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:54,854 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:54,854 - sqlalchemy.engine.Engine - INFO - [cached since 0.008874s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 54, 854678))
2025-05-07 11:40:54,855 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:54,855 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:55,080 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:55,080 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:55,791 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:55,791 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:55,792 - sqlalchemy.engine.Engine - INFO - [cached since 73.36s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 55, 791564))
2025-05-07 11:40:55,792 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:55,793 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 55, 791564))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:55,793 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:55,857 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:55,857 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:55,857 - sqlalchemy.engine.Engine - INFO - [cached since 1.011s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 55, 857009))
2025-05-07 11:40:55,858 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:55,859 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:56,087 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:56,087 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:56,758 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:56,758 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:56,758 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:56,758 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:56,795 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:56,795 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:56,795 - sqlalchemy.engine.Engine - INFO - [cached since 74.37s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 56, 794887))
2025-05-07 11:40:56,796 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:56,796 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 56, 794887))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:56,797 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:56,860 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:56,860 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:56,860 - sqlalchemy.engine.Engine - INFO - [cached since 2.015s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 56, 860255))
2025-05-07 11:40:56,861 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:56,862 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:57,094 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:57,094 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:57,453 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:57,453 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:57,453 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:57,453 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:57,798 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:57,799 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:57,799 - sqlalchemy.engine.Engine - INFO - [cached since 75.37s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 57, 798665))
2025-05-07 11:40:57,800 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:57,801 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 57, 798665))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:57,802 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:57,864 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:57,864 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:57,865 - sqlalchemy.engine.Engine - INFO - [cached since 3.019s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 57, 863690))
2025-05-07 11:40:57,867 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:57,868 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:58,100 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:58,100 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:58,803 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:58,803 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:58,804 - sqlalchemy.engine.Engine - INFO - [cached since 76.38s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 58, 803441))
2025-05-07 11:40:58,805 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:58,805 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 58, 803441))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:58,806 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:58,870 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:58,870 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:58,870 - sqlalchemy.engine.Engine - INFO - [cached since 4.025s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 58, 870260))
2025-05-07 11:40:58,872 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:58,873 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:40:59,107 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:40:59,107 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:59,808 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:59,809 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:59,809 - sqlalchemy.engine.Engine - INFO - [cached since 77.38s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 59, 807912))
2025-05-07 11:40:59,811 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:40:59,812 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 40, 59, 807912))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:40:59,814 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:40:59,844 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:40:59,844 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:40:59,845 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:40:59,845 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:40:59,875 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:40:59,876 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:40:59,876 - sqlalchemy.engine.Engine - INFO - [cached since 5.03s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 40, 59, 874787))
2025-05-07 11:40:59,877 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:40:59,879 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:00,113 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:00,114 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:00,816 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:00,816 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:00,817 - sqlalchemy.engine.Engine - INFO - [cached since 78.39s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 0, 815477))
2025-05-07 11:41:00,820 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:00,821 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 0, 815477))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:00,823 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:00,881 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:00,882 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:00,883 - sqlalchemy.engine.Engine - INFO - [cached since 6.037s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 0, 881264))
2025-05-07 11:41:00,885 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:00,887 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:01,120 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:01,120 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:01,758 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:01,758 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:01,758 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:01,758 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:01,824 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:01,825 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:01,825 - sqlalchemy.engine.Engine - INFO - [cached since 79.4s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 1, 824475))
2025-05-07 11:41:01,826 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:01,826 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 1, 824475))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:01,827 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:01,888 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:01,888 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:01,888 - sqlalchemy.engine.Engine - INFO - [cached since 7.043s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 1, 888092))
2025-05-07 11:41:01,889 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:01,890 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:02,126 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:02,126 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:02,454 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:02,454 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:02,454 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:02,454 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:02,828 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:02,829 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:02,829 - sqlalchemy.engine.Engine - INFO - [cached since 80.4s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 2, 828687))
2025-05-07 11:41:02,829 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:02,830 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 2, 828687))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:02,830 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:02,891 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:02,891 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:02,891 - sqlalchemy.engine.Engine - INFO - [cached since 8.046s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 2, 891586))
2025-05-07 11:41:02,892 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:02,915 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:03,152 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:03,153 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:03,830 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:03,831 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:03,831 - sqlalchemy.engine.Engine - INFO - [cached since 81.4s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 3, 830747))
2025-05-07 11:41:03,831 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:03,831 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 3, 830747))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:03,832 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:03,945 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:03,945 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:03,945 - sqlalchemy.engine.Engine - INFO - [cached since 9.099s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 3, 938177))
2025-05-07 11:41:03,946 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:03,946 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:04,158 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:04,158 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:04,834 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:04,835 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:04,836 - sqlalchemy.engine.Engine - INFO - [cached since 82.41s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 4, 833669))
2025-05-07 11:41:04,838 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:04,839 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 4, 833669))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:04,842 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:04,846 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:04,847 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:04,847 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:04,847 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:04,948 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:04,949 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:04,949 - sqlalchemy.engine.Engine - INFO - [cached since 10.1s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 4, 948193))
2025-05-07 11:41:04,951 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:04,953 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:05,163 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:05,163 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:05,844 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:05,846 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:05,847 - sqlalchemy.engine.Engine - INFO - [cached since 83.42s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 5, 844298))
2025-05-07 11:41:05,854 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:05,857 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 5, 844298))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:05,859 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:05,954 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:05,955 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:05,955 - sqlalchemy.engine.Engine - INFO - [cached since 11.11s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 5, 954388))
2025-05-07 11:41:05,956 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:05,958 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:06,169 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:06,169 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:06,760 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:06,760 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:06,760 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:06,760 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:06,860 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:06,861 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:06,861 - sqlalchemy.engine.Engine - INFO - [cached since 84.43s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 6, 860679))
2025-05-07 11:41:06,862 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:06,862 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 6, 860679))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:06,863 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:06,958 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:06,958 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:06,958 - sqlalchemy.engine.Engine - INFO - [cached since 12.11s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 6, 958390))
2025-05-07 11:41:06,959 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:06,960 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:07,175 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:07,175 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:07,454 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:07,454 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:07,454 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:07,454 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:07,865 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:07,866 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:07,866 - sqlalchemy.engine.Engine - INFO - [cached since 85.44s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 7, 864999))
2025-05-07 11:41:07,868 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:07,868 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 7, 864999))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:07,870 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:07,961 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:07,961 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:07,961 - sqlalchemy.engine.Engine - INFO - [cached since 13.12s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 7, 961115))
2025-05-07 11:41:07,962 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:07,963 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:08,181 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:08,181 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:08,872 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:08,872 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:08,873 - sqlalchemy.engine.Engine - INFO - [cached since 86.45s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 8, 871658))
2025-05-07 11:41:08,874 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:08,874 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 8, 871658))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:08,875 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:08,965 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:08,965 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:08,965 - sqlalchemy.engine.Engine - INFO - [cached since 14.12s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 8, 964828))
2025-05-07 11:41:08,966 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:08,967 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:09,188 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:09,188 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:09,849 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:09,850 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:09,850 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:09,850 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:09,877 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:09,878 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:09,879 - sqlalchemy.engine.Engine - INFO - [cached since 87.45s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 9, 877148))
2025-05-07 11:41:09,880 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:09,881 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 9, 877148))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:09,882 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:09,968 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:09,968 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:09,969 - sqlalchemy.engine.Engine - INFO - [cached since 15.12s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 9, 968560))
2025-05-07 11:41:09,969 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:09,970 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:10,194 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:10,195 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:10,885 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:10,885 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:10,885 - sqlalchemy.engine.Engine - INFO - [cached since 88.46s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 10, 884495))
2025-05-07 11:41:10,888 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:10,888 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 10, 884495))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:10,890 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:10,972 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:10,973 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:10,973 - sqlalchemy.engine.Engine - INFO - [cached since 16.13s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 10, 972159))
2025-05-07 11:41:10,975 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:10,977 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:11,200 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:11,200 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:11,761 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:11,761 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:11,761 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:11,761 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:11,891 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:11,891 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:11,891 - sqlalchemy.engine.Engine - INFO - [cached since 89.46s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 11, 891440))
2025-05-07 11:41:11,892 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:11,892 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 11, 891440))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:11,893 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:11,978 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:11,978 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:11,978 - sqlalchemy.engine.Engine - INFO - [cached since 17.13s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 11, 978498))
2025-05-07 11:41:11,979 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:11,980 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:12,207 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:12,207 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:12,456 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:12,456 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:12,456 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:12,456 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:12,894 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:12,895 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:12,895 - sqlalchemy.engine.Engine - INFO - [cached since 90.47s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 12, 894473))
2025-05-07 11:41:12,896 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:12,897 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 12, 894473))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:12,897 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:12,982 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:12,982 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:12,982 - sqlalchemy.engine.Engine - INFO - [cached since 18.14s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 12, 981867))
2025-05-07 11:41:12,983 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:12,984 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:13,213 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:13,214 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:13,898 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:13,898 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:13,898 - sqlalchemy.engine.Engine - INFO - [cached since 91.47s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 13, 898254))
2025-05-07 11:41:13,899 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:13,900 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 13, 898254))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:13,900 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:13,985 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:13,986 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:13,986 - sqlalchemy.engine.Engine - INFO - [cached since 19.14s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 13, 985495))
2025-05-07 11:41:13,988 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:13,989 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:14,220 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:14,221 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:14,852 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:14,852 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:14,852 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:14,852 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:14,902 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:14,902 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:14,902 - sqlalchemy.engine.Engine - INFO - [cached since 92.47s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 14, 901948))
2025-05-07 11:41:14,903 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:14,903 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 14, 901948))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:14,903 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:14,991 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:14,991 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:14,991 - sqlalchemy.engine.Engine - INFO - [cached since 20.15s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 14, 990995))
2025-05-07 11:41:14,992 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:14,993 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:15,227 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:15,227 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:15,904 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:15,905 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:15,905 - sqlalchemy.engine.Engine - INFO - [cached since 93.48s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 15, 904542))
2025-05-07 11:41:15,906 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:15,906 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 15, 904542))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:15,907 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:15,995 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:15,995 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:15,995 - sqlalchemy.engine.Engine - INFO - [cached since 21.15s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 15, 994783))
2025-05-07 11:41:15,997 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:15,998 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:16,233 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:16,234 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:16,762 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:16,762 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:16,762 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:16,762 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:16,908 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:16,909 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:16,909 - sqlalchemy.engine.Engine - INFO - [cached since 94.48s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 16, 908735))
2025-05-07 11:41:16,909 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:16,909 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 16, 908735))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:16,910 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:16,999 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:16,999 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:16,999 - sqlalchemy.engine.Engine - INFO - [cached since 22.15s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 16, 999428))
2025-05-07 11:41:17,000 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:17,023 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:17,260 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:17,261 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:17,457 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:17,457 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:17,457 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:17,457 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:17,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:17,911 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:17,911 - sqlalchemy.engine.Engine - INFO - [cached since 95.48s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 17, 910920))
2025-05-07 11:41:17,912 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:17,912 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 17, 910920))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:17,912 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:18,024 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:18,025 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:18,025 - sqlalchemy.engine.Engine - INFO - [cached since 23.18s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 18, 24842))
2025-05-07 11:41:18,025 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:18,026 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:18,265 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:18,266 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:18,916 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:18,917 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:18,917 - sqlalchemy.engine.Engine - INFO - [cached since 96.49s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 18, 914594))
2025-05-07 11:41:18,944 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:18,955 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 18, 914594))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:18,957 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:19,027 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:19,027 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:19,027 - sqlalchemy.engine.Engine - INFO - [cached since 24.18s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 19, 26992))
2025-05-07 11:41:19,030 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:19,031 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:19,270 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:19,271 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:19,853 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:19,853 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:19,853 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:19,853 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:19,959 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:19,959 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:19,959 - sqlalchemy.engine.Engine - INFO - [cached since 97.53s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 19, 958927))
2025-05-07 11:41:19,960 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:19,960 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 19, 958927))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:19,961 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:20,032 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:20,032 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:20,032 - sqlalchemy.engine.Engine - INFO - [cached since 25.19s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 20, 32466))
2025-05-07 11:41:20,033 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:20,034 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:20,277 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:20,277 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:20,962 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:20,962 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:20,962 - sqlalchemy.engine.Engine - INFO - [cached since 98.53s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 20, 962273))
2025-05-07 11:41:20,963 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:20,964 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 20, 962273))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:20,964 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:21,035 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:21,035 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:21,035 - sqlalchemy.engine.Engine - INFO - [cached since 26.19s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 21, 35196))
2025-05-07 11:41:21,036 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:21,037 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:21,284 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:21,285 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:21,763 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:21,763 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:21,763 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:21,763 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:21,965 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:21,965 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:21,965 - sqlalchemy.engine.Engine - INFO - [cached since 99.54s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 21, 965230))
2025-05-07 11:41:21,966 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:21,967 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 21, 965230))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:21,967 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:22,038 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:22,038 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:22,038 - sqlalchemy.engine.Engine - INFO - [cached since 27.19s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 22, 38056))
2025-05-07 11:41:22,040 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:22,041 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:22,291 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:22,292 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:22,459 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:22,459 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:22,459 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:22,459 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:22,969 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:22,970 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:22,971 - sqlalchemy.engine.Engine - INFO - [cached since 100.5s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 22, 969258))
2025-05-07 11:41:22,973 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:22,974 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 22, 969258))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:22,977 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:23,042 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:23,042 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:23,042 - sqlalchemy.engine.Engine - INFO - [cached since 28.2s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 23, 41919))
2025-05-07 11:41:23,043 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:23,044 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:23,298 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:23,299 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:23,979 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:23,979 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:23,979 - sqlalchemy.engine.Engine - INFO - [cached since 101.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 23, 978808))
2025-05-07 11:41:23,980 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:23,981 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 23, 978808))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:23,982 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:24,046 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:24,046 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:24,046 - sqlalchemy.engine.Engine - INFO - [cached since 29.2s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 24, 45873))
2025-05-07 11:41:24,048 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:24,048 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:24,305 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:24,305 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:24,855 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:24,855 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:24,855 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:24,855 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:24,983 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:24,983 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:24,983 - sqlalchemy.engine.Engine - INFO - [cached since 102.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 24, 983449))
2025-05-07 11:41:24,984 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:24,984 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 24, 983449))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:24,985 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:25,050 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:25,050 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:25,050 - sqlalchemy.engine.Engine - INFO - [cached since 30.2s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 25, 49869))
2025-05-07 11:41:25,051 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:25,051 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:25,311 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:25,312 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:25,987 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:25,988 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:25,988 - sqlalchemy.engine.Engine - INFO - [cached since 103.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 25, 986885))
2025-05-07 11:41:25,990 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:25,991 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 25, 986885))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:25,992 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:26,052 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:26,052 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:26,052 - sqlalchemy.engine.Engine - INFO - [cached since 31.21s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 26, 52048))
2025-05-07 11:41:26,054 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:26,055 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:26,319 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:26,319 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:26,764 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:26,764 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:26,764 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:26,764 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:26,994 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:26,994 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:26,994 - sqlalchemy.engine.Engine - INFO - [cached since 104.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 26, 994145))
2025-05-07 11:41:26,995 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:26,996 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 26, 994145))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:26,996 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:27,057 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:27,058 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:27,058 - sqlalchemy.engine.Engine - INFO - [cached since 32.21s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 27, 57183))
2025-05-07 11:41:27,060 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:27,061 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:27,326 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:27,326 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:27,460 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:27,460 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:27,460 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:27,460 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:27,998 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:27,998 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:27,998 - sqlalchemy.engine.Engine - INFO - [cached since 105.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 27, 998182))
2025-05-07 11:41:28,000 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:28,000 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 27, 998182))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:28,001 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:28,062 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:28,063 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:28,063 - sqlalchemy.engine.Engine - INFO - [cached since 33.22s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 28, 62460))
2025-05-07 11:41:28,064 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:28,065 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:28,332 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:28,333 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:29,003 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:29,004 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:29,004 - sqlalchemy.engine.Engine - INFO - [cached since 106.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 29, 2770))
2025-05-07 11:41:29,007 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:29,008 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 29, 2770))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:29,008 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:29,066 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:29,066 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:29,066 - sqlalchemy.engine.Engine - INFO - [cached since 34.22s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 29, 66609))
2025-05-07 11:41:29,067 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:29,068 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:29,339 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:29,339 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:29,856 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:29,857 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:29,857 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:29,857 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:30,010 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:30,010 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:30,010 - sqlalchemy.engine.Engine - INFO - [cached since 107.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 30, 10178))
2025-05-07 11:41:30,011 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:30,011 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 30, 10178))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:30,012 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:30,069 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:30,069 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:30,069 - sqlalchemy.engine.Engine - INFO - [cached since 35.22s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 30, 68938))
2025-05-07 11:41:30,070 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:30,071 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:30,346 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:30,346 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:31,014 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:31,015 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:31,015 - sqlalchemy.engine.Engine - INFO - [cached since 108.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 31, 13680))
2025-05-07 11:41:31,018 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:31,019 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 31, 13680))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:31,021 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:31,073 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:31,073 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:31,074 - sqlalchemy.engine.Engine - INFO - [cached since 36.23s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 31, 72635))
2025-05-07 11:41:31,076 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:31,077 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:31,353 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:31,354 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:31,766 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:31,766 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:31,766 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:31,766 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:32,023 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:32,023 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:32,023 - sqlalchemy.engine.Engine - INFO - [cached since 109.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 32, 22868))
2025-05-07 11:41:32,024 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:32,025 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 32, 22868))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:32,025 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:32,079 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:32,080 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:32,080 - sqlalchemy.engine.Engine - INFO - [cached since 37.23s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 32, 78995))
2025-05-07 11:41:32,082 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:32,083 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:32,360 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:32,360 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:32,460 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:32,461 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:32,461 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:32,461 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:33,028 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:33,029 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:33,029 - sqlalchemy.engine.Engine - INFO - [cached since 110.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 33, 27510))
2025-05-07 11:41:33,031 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:33,032 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 33, 27510))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:33,033 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:33,084 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:33,085 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:33,085 - sqlalchemy.engine.Engine - INFO - [cached since 38.24s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 33, 84491))
2025-05-07 11:41:33,087 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:33,088 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:33,367 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:33,368 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:34,035 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:34,036 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:34,036 - sqlalchemy.engine.Engine - INFO - [cached since 111.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 34, 35268))
2025-05-07 11:41:34,038 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:34,039 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 34, 35268))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:34,040 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:34,090 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:34,091 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:34,091 - sqlalchemy.engine.Engine - INFO - [cached since 39.25s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 34, 90444))
2025-05-07 11:41:34,092 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:34,094 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:34,373 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:34,373 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:34,858 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:34,859 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:34,859 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:34,859 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:35,041 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:35,041 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:35,041 - sqlalchemy.engine.Engine - INFO - [cached since 112.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 35, 41373))
2025-05-07 11:41:35,042 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:35,042 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 35, 41373))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:35,043 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:35,095 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:35,096 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:35,096 - sqlalchemy.engine.Engine - INFO - [cached since 40.25s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 35, 95570))
2025-05-07 11:41:35,097 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:35,097 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:35,379 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:35,380 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:36,044 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:36,045 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:36,045 - sqlalchemy.engine.Engine - INFO - [cached since 113.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 36, 44311))
2025-05-07 11:41:36,046 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:36,046 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 36, 44311))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:36,047 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:36,098 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:36,098 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:36,098 - sqlalchemy.engine.Engine - INFO - [cached since 41.25s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 36, 98343))
2025-05-07 11:41:36,099 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:36,100 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:36,386 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:36,386 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:36,767 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:36,767 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:36,767 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:36,767 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:37,048 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:37,049 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:37,049 - sqlalchemy.engine.Engine - INFO - [cached since 114.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 37, 48455))
2025-05-07 11:41:37,050 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:37,050 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 37, 48455))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:37,051 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:37,102 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:37,102 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:37,102 - sqlalchemy.engine.Engine - INFO - [cached since 42.26s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 37, 101731))
2025-05-07 11:41:37,103 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:37,104 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:37,392 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:37,392 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:37,462 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:37,462 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:37,462 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:37,462 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:38,053 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:38,053 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:38,054 - sqlalchemy.engine.Engine - INFO - [cached since 115.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 38, 52727))
2025-05-07 11:41:38,055 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:38,056 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 38, 52727))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:38,057 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:38,105 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:38,105 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:38,106 - sqlalchemy.engine.Engine - INFO - [cached since 43.26s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 38, 104851))
2025-05-07 11:41:38,108 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:38,109 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:38,398 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:38,398 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:39,058 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:39,058 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:39,058 - sqlalchemy.engine.Engine - INFO - [cached since 116.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 39, 58255))
2025-05-07 11:41:39,059 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:39,059 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 39, 58255))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:39,060 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:39,111 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:39,111 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:39,111 - sqlalchemy.engine.Engine - INFO - [cached since 44.27s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 39, 110914))
2025-05-07 11:41:39,112 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:39,113 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:39,405 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:39,405 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:39,860 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:39,860 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:39,860 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:39,860 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:40,061 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:40,061 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:40,061 - sqlalchemy.engine.Engine - INFO - [cached since 117.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 40, 61344))
2025-05-07 11:41:40,062 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:40,062 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 40, 61344))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:40,063 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:40,114 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:40,114 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:40,114 - sqlalchemy.engine.Engine - INFO - [cached since 45.27s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 40, 114102))
2025-05-07 11:41:40,115 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:40,116 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:40,411 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:40,411 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:41,064 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:41,065 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:41,065 - sqlalchemy.engine.Engine - INFO - [cached since 118.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 41, 64440))
2025-05-07 11:41:41,066 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:41,066 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 41, 64440))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:41,067 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:41,118 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:41,118 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:41,118 - sqlalchemy.engine.Engine - INFO - [cached since 46.27s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 41, 118287))
2025-05-07 11:41:41,119 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:41,120 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:41,417 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:41,417 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:41,768 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:41,768 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:41,768 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:41,768 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:42,068 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:42,069 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:42,069 - sqlalchemy.engine.Engine - INFO - [cached since 119.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 42, 68455))
2025-05-07 11:41:42,070 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:42,070 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 42, 68455))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:42,071 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:42,122 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:42,122 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:42,122 - sqlalchemy.engine.Engine - INFO - [cached since 47.28s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 42, 121853))
2025-05-07 11:41:42,124 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:42,124 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:42,423 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:42,423 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:42,463 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:42,463 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:42,463 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:42,463 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:43,072 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:43,072 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:43,072 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 43, 72034))
2025-05-07 11:41:43,073 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:43,073 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 43, 72034))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:43,073 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:43,126 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:43,126 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:43,126 - sqlalchemy.engine.Engine - INFO - [cached since 48.28s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 43, 126197))
2025-05-07 11:41:43,127 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:43,128 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:43,431 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:43,431 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:44,075 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:44,076 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:44,076 - sqlalchemy.engine.Engine - INFO - [cached since 121.6s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 44, 75281))
2025-05-07 11:41:44,077 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:44,077 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 44, 75281))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:44,078 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:44,130 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:44,130 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:44,130 - sqlalchemy.engine.Engine - INFO - [cached since 49.28s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 44, 130033))
2025-05-07 11:41:44,132 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:44,133 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:44,437 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:44,437 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:44,862 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:44,862 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:44,862 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:44,862 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:45,078 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:45,079 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:45,079 - sqlalchemy.engine.Engine - INFO - [cached since 122.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 45, 78786))
2025-05-07 11:41:45,079 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:45,080 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 45, 78786))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:45,080 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:45,134 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:45,134 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:45,134 - sqlalchemy.engine.Engine - INFO - [cached since 50.29s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 45, 134381))
2025-05-07 11:41:45,135 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:45,136 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:45,443 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:45,444 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:46,081 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:46,082 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:46,082 - sqlalchemy.engine.Engine - INFO - [cached since 123.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 46, 81724))
2025-05-07 11:41:46,083 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:46,083 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 46, 81724))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:46,083 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:46,138 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:46,138 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:46,138 - sqlalchemy.engine.Engine - INFO - [cached since 51.29s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 46, 138022))
2025-05-07 11:41:46,139 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:46,140 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:46,451 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:46,452 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:46,770 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:46,770 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:46,770 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:46,770 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:47,084 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:47,084 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:47,084 - sqlalchemy.engine.Engine - INFO - [cached since 124.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 47, 84364))
2025-05-07 11:41:47,085 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:47,085 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 47, 84364))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:47,086 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:47,142 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:47,142 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:47,142 - sqlalchemy.engine.Engine - INFO - [cached since 52.3s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 47, 141926))
2025-05-07 11:41:47,143 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:47,144 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:47,459 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:47,459 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:47,464 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:47,464 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:47,464 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:47,464 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:48,087 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:48,088 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:48,088 - sqlalchemy.engine.Engine - INFO - [cached since 125.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 48, 87601))
2025-05-07 11:41:48,088 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:48,089 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 48, 87601))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:48,089 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:48,145 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:48,145 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:48,145 - sqlalchemy.engine.Engine - INFO - [cached since 53.3s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 48, 145009))
2025-05-07 11:41:48,146 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:48,147 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:48,463 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:48,464 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:49,091 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:49,092 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:49,092 - sqlalchemy.engine.Engine - INFO - [cached since 126.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 49, 91254))
2025-05-07 11:41:49,093 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:49,094 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 49, 91254))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:49,095 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:49,148 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:49,149 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:49,149 - sqlalchemy.engine.Engine - INFO - [cached since 54.3s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 49, 148449))
2025-05-07 11:41:49,150 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:49,151 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:49,469 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:49,470 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:49,863 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:49,864 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:49,864 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:49,864 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:50,096 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:50,097 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:50,097 - sqlalchemy.engine.Engine - INFO - [cached since 127.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 50, 96726))
2025-05-07 11:41:50,097 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:50,098 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 50, 96726))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:50,098 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:50,152 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:50,152 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:50,152 - sqlalchemy.engine.Engine - INFO - [cached since 55.31s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 50, 152333))
2025-05-07 11:41:50,153 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:50,155 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:50,476 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:50,476 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:51,099 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:51,100 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:51,100 - sqlalchemy.engine.Engine - INFO - [cached since 128.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 51, 99598))
2025-05-07 11:41:51,101 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:51,101 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 51, 99598))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:51,102 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:51,156 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:51,157 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:51,157 - sqlalchemy.engine.Engine - INFO - [cached since 56.31s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 51, 156615))
2025-05-07 11:41:51,158 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:51,159 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:51,483 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:51,483 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:51,771 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:51,771 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:51,771 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:51,771 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:52,104 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:52,105 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:52,105 - sqlalchemy.engine.Engine - INFO - [cached since 129.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 52, 103839))
2025-05-07 11:41:52,107 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:52,107 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 52, 103839))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:52,109 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:52,161 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:52,162 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:52,162 - sqlalchemy.engine.Engine - INFO - [cached since 57.32s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 52, 161190))
2025-05-07 11:41:52,165 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:52,166 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:52,465 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:52,465 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:52,465 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:52,465 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:52,489 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:52,489 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:53,110 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:53,111 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:53,111 - sqlalchemy.engine.Engine - INFO - [cached since 130.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 53, 110492))
2025-05-07 11:41:53,112 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:53,112 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 53, 110492))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:53,113 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:53,168 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:53,168 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:53,168 - sqlalchemy.engine.Engine - INFO - [cached since 58.32s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 53, 168113))
2025-05-07 11:41:53,169 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:53,170 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:53,495 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:53,495 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:54,114 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:54,116 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:54,116 - sqlalchemy.engine.Engine - INFO - [cached since 131.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 54, 114346))
2025-05-07 11:41:54,117 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:54,117 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 54, 114346))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:54,118 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:54,172 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:54,172 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:54,172 - sqlalchemy.engine.Engine - INFO - [cached since 59.33s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 54, 171927))
2025-05-07 11:41:54,173 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:54,174 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:54,502 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:54,503 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:54,864 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:54,864 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:54,864 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:54,864 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:55,119 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:55,119 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:55,119 - sqlalchemy.engine.Engine - INFO - [cached since 132.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 55, 118873))
2025-05-07 11:41:55,120 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:55,120 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 55, 118873))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:55,121 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:55,176 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:55,176 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:55,176 - sqlalchemy.engine.Engine - INFO - [cached since 60.33s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 55, 175774))
2025-05-07 11:41:55,177 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:55,179 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:55,508 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:55,509 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:56,122 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:56,123 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:56,123 - sqlalchemy.engine.Engine - INFO - [cached since 133.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 56, 122604))
2025-05-07 11:41:56,124 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:56,124 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 56, 122604))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:56,125 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:56,180 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:56,181 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:56,181 - sqlalchemy.engine.Engine - INFO - [cached since 61.34s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 56, 180537))
2025-05-07 11:41:56,182 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:56,183 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:56,515 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:56,515 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:56,771 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:56,772 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:56,772 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:56,772 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:57,126 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:57,126 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:57,126 - sqlalchemy.engine.Engine - INFO - [cached since 134.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 57, 126254))
2025-05-07 11:41:57,127 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:57,127 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 57, 126254))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:57,128 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:57,185 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:57,185 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:57,185 - sqlalchemy.engine.Engine - INFO - [cached since 62.34s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 57, 185005))
2025-05-07 11:41:57,186 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:57,187 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:57,467 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:57,467 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:57,467 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:57,467 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:41:57,520 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:57,521 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:58,129 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:58,129 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:58,129 - sqlalchemy.engine.Engine - INFO - [cached since 135.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 58, 128783))
2025-05-07 11:41:58,130 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:58,130 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 58, 128783))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:58,131 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:58,189 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:58,189 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:58,189 - sqlalchemy.engine.Engine - INFO - [cached since 63.34s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 58, 188785))
2025-05-07 11:41:58,190 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:58,191 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:58,527 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:58,527 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:59,132 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:59,132 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:59,133 - sqlalchemy.engine.Engine - INFO - [cached since 136.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 59, 131889))
2025-05-07 11:41:59,134 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:41:59,135 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 41, 59, 131889))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:41:59,136 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:59,192 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:41:59,192 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:41:59,192 - sqlalchemy.engine.Engine - INFO - [cached since 64.35s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 41, 59, 192108))
2025-05-07 11:41:59,194 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:41:59,195 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:41:59,533 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:41:59,533 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:41:59,866 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:41:59,866 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:41:59,866 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:41:59,866 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:00,137 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:00,137 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:00,137 - sqlalchemy.engine.Engine - INFO - [cached since 137.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 0, 137347))
2025-05-07 11:42:00,139 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:00,139 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 0, 137347))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:00,140 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:00,197 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:00,198 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:00,198 - sqlalchemy.engine.Engine - INFO - [cached since 65.35s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 0, 197509))
2025-05-07 11:42:00,199 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:00,200 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:00,540 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:00,540 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:01,141 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:01,142 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:01,142 - sqlalchemy.engine.Engine - INFO - [cached since 138.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 1, 141668))
2025-05-07 11:42:01,143 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:01,144 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 1, 141668))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:01,145 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:01,203 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:01,204 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:01,204 - sqlalchemy.engine.Engine - INFO - [cached since 66.36s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 1, 202754))
2025-05-07 11:42:01,206 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:01,209 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:01,547 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:01,548 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:01,773 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:01,773 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:01,773 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:01,773 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:02,146 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:02,147 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:02,148 - sqlalchemy.engine.Engine - INFO - [cached since 139.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 2, 146501))
2025-05-07 11:42:02,149 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:02,150 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 2, 146501))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:02,152 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:02,211 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:02,211 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:02,211 - sqlalchemy.engine.Engine - INFO - [cached since 67.37s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 2, 210911))
2025-05-07 11:42:02,213 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:02,214 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:02,467 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:02,467 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:02,468 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:02,468 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:02,554 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:02,555 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:03,154 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:03,154 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:03,155 - sqlalchemy.engine.Engine - INFO - [cached since 140.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 3, 153643))
2025-05-07 11:42:03,156 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:03,157 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 3, 153643))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:03,158 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:03,216 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:03,217 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:03,217 - sqlalchemy.engine.Engine - INFO - [cached since 68.37s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 3, 216061))
2025-05-07 11:42:03,220 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:03,221 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:03,561 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:03,562 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:04,160 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:04,160 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:04,160 - sqlalchemy.engine.Engine - INFO - [cached since 141.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 4, 160199))
2025-05-07 11:42:04,161 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:04,162 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 4, 160199))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:04,162 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:04,223 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:04,223 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:04,223 - sqlalchemy.engine.Engine - INFO - [cached since 69.38s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 4, 223069))
2025-05-07 11:42:04,224 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:04,225 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:04,568 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:04,568 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:04,867 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:04,867 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:04,867 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:04,867 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:05,164 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:05,164 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:05,164 - sqlalchemy.engine.Engine - INFO - [cached since 142.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 5, 163925))
2025-05-07 11:42:05,165 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:05,166 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 5, 163925))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:05,166 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:05,227 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:05,227 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:05,227 - sqlalchemy.engine.Engine - INFO - [cached since 70.38s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 5, 226956))
2025-05-07 11:42:05,228 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:05,229 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:05,575 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:05,575 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:06,170 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:06,171 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:06,171 - sqlalchemy.engine.Engine - INFO - [cached since 143.7s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 6, 168857))
2025-05-07 11:42:06,174 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:06,176 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 6, 168857))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:06,179 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:06,232 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:06,232 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:06,232 - sqlalchemy.engine.Engine - INFO - [cached since 71.39s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 6, 231518))
2025-05-07 11:42:06,234 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:06,235 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:06,582 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:06,582 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:06,774 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:06,774 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:06,775 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:06,775 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:07,181 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:07,181 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:07,181 - sqlalchemy.engine.Engine - INFO - [cached since 144.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 7, 180825))
2025-05-07 11:42:07,181 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:07,182 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 7, 180825))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:07,182 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:07,236 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:07,237 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:07,237 - sqlalchemy.engine.Engine - INFO - [cached since 72.39s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 7, 236719))
2025-05-07 11:42:07,238 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:07,239 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:07,468 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:07,468 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:07,468 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:07,469 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:07,587 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:07,587 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:08,184 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:08,185 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:08,186 - sqlalchemy.engine.Engine - INFO - [cached since 145.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 8, 184265))
2025-05-07 11:42:08,187 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:08,188 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 8, 184265))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:08,189 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:08,239 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:08,239 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:08,239 - sqlalchemy.engine.Engine - INFO - [cached since 73.39s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 8, 239450))
2025-05-07 11:42:08,240 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:08,241 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:08,593 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:08,594 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:09,191 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:09,191 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:09,191 - sqlalchemy.engine.Engine - INFO - [cached since 146.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 9, 190982))
2025-05-07 11:42:09,192 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:09,193 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 9, 190982))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:09,193 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:09,242 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:09,242 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:09,242 - sqlalchemy.engine.Engine - INFO - [cached since 74.4s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 9, 241948))
2025-05-07 11:42:09,244 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:09,244 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:09,600 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:09,601 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:09,868 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:09,868 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:09,868 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:09,868 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:10,194 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:10,195 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:10,195 - sqlalchemy.engine.Engine - INFO - [cached since 147.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 10, 194534))
2025-05-07 11:42:10,196 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:10,196 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 10, 194534))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:10,197 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:10,247 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:10,247 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:10,248 - sqlalchemy.engine.Engine - INFO - [cached since 75.4s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 10, 246457))
2025-05-07 11:42:10,250 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:10,251 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:10,607 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:10,607 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:11,199 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:11,200 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:11,200 - sqlalchemy.engine.Engine - INFO - [cached since 148.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 11, 199219))
2025-05-07 11:42:11,203 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:11,204 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 11, 199219))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:11,205 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:11,253 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:11,254 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:11,254 - sqlalchemy.engine.Engine - INFO - [cached since 76.41s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 11, 252415))
2025-05-07 11:42:11,256 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:11,258 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:11,614 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:11,614 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:11,775 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:11,775 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:11,775 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:11,775 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:12,206 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:12,206 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:12,206 - sqlalchemy.engine.Engine - INFO - [cached since 149.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 12, 206240))
2025-05-07 11:42:12,207 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:12,207 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 12, 206240))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:12,208 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:12,259 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:12,259 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:12,259 - sqlalchemy.engine.Engine - INFO - [cached since 77.41s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 12, 258942))
2025-05-07 11:42:12,260 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:12,260 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:12,470 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:12,470 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:12,470 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:12,470 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:12,619 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:12,619 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:13,209 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:13,210 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:13,210 - sqlalchemy.engine.Engine - INFO - [cached since 150.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 13, 209028))
2025-05-07 11:42:13,212 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:13,213 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 13, 209028))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:13,214 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:13,263 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:13,263 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:13,263 - sqlalchemy.engine.Engine - INFO - [cached since 78.42s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 13, 262581))
2025-05-07 11:42:13,265 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:13,266 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:13,626 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:13,626 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:14,216 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:14,217 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:14,217 - sqlalchemy.engine.Engine - INFO - [cached since 151.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 14, 216391))
2025-05-07 11:42:14,218 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:14,218 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 14, 216391))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:14,219 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:14,268 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:14,268 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:14,269 - sqlalchemy.engine.Engine - INFO - [cached since 79.42s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 14, 268158))
2025-05-07 11:42:14,270 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:14,271 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:14,632 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:14,633 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:14,870 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:14,870 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:14,870 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:14,870 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:15,221 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:15,222 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:15,222 - sqlalchemy.engine.Engine - INFO - [cached since 152.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 15, 220916))
2025-05-07 11:42:15,223 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:15,224 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 15, 220916))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:15,226 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:15,273 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:15,274 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:15,274 - sqlalchemy.engine.Engine - INFO - [cached since 80.43s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 15, 273105))
2025-05-07 11:42:15,277 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:15,278 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:15,638 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:15,639 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:16,228 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:16,229 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:16,229 - sqlalchemy.engine.Engine - INFO - [cached since 153.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 16, 227986))
2025-05-07 11:42:16,232 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:16,233 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 16, 227986))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:16,235 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:16,281 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:16,281 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:16,281 - sqlalchemy.engine.Engine - INFO - [cached since 81.44s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 16, 280513))
2025-05-07 11:42:16,284 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:16,285 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:16,644 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:16,645 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:16,776 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:16,776 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:16,776 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:16,776 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:17,236 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:17,236 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:17,237 - sqlalchemy.engine.Engine - INFO - [cached since 154.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 17, 236536))
2025-05-07 11:42:17,237 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:17,238 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 17, 236536))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:17,238 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:17,286 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:17,286 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:17,286 - sqlalchemy.engine.Engine - INFO - [cached since 82.44s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 17, 286363))
2025-05-07 11:42:17,287 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:17,288 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:17,471 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:17,471 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:17,471 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:17,471 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:17,662 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:17,663 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:18,240 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:18,241 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:18,241 - sqlalchemy.engine.Engine - INFO - [cached since 155.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 18, 240380))
2025-05-07 11:42:18,242 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:18,242 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 18, 240380))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:18,243 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:18,289 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:18,290 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:18,290 - sqlalchemy.engine.Engine - INFO - [cached since 83.44s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 18, 289551))
2025-05-07 11:42:18,291 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:18,292 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:18,668 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:18,668 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:19,245 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:19,246 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:19,246 - sqlalchemy.engine.Engine - INFO - [cached since 156.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 19, 245050))
2025-05-07 11:42:19,248 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:19,249 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 19, 245050))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:19,250 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:19,294 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:19,294 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:19,294 - sqlalchemy.engine.Engine - INFO - [cached since 84.45s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 19, 293837))
2025-05-07 11:42:19,295 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:19,295 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:19,675 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:19,675 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:19,872 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:19,872 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:19,872 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:19,872 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:20,252 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:20,253 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:20,253 - sqlalchemy.engine.Engine - INFO - [cached since 157.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 20, 252009))
2025-05-07 11:42:20,255 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:20,257 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 20, 252009))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:20,258 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:20,297 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:20,298 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:20,298 - sqlalchemy.engine.Engine - INFO - [cached since 85.45s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 20, 297362))
2025-05-07 11:42:20,300 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:20,302 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:20,682 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:20,682 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:21,260 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:21,261 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:21,262 - sqlalchemy.engine.Engine - INFO - [cached since 158.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 21, 260333))
2025-05-07 11:42:21,264 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:21,265 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 21, 260333))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:21,267 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:21,305 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:21,306 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:21,306 - sqlalchemy.engine.Engine - INFO - [cached since 86.46s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 21, 304472))
2025-05-07 11:42:21,309 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:21,312 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:21,686 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:21,687 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:21,777 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:21,777 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:21,777 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:21,777 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:22,269 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:22,270 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:22,270 - sqlalchemy.engine.Engine - INFO - [cached since 159.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 22, 268861))
2025-05-07 11:42:22,272 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:22,273 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 22, 268861))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:22,274 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:22,314 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:22,314 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:22,315 - sqlalchemy.engine.Engine - INFO - [cached since 87.47s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 22, 313896))
2025-05-07 11:42:22,316 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:22,317 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:22,472 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:22,472 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:22,472 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:22,472 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:22,692 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:22,693 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:23,276 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:23,277 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:23,277 - sqlalchemy.engine.Engine - INFO - [cached since 160.8s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 23, 276058))
2025-05-07 11:42:23,279 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:23,280 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 23, 276058))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:23,281 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:23,319 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:23,319 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:23,320 - sqlalchemy.engine.Engine - INFO - [cached since 88.47s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 23, 318957))
2025-05-07 11:42:23,321 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:23,321 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:23,699 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:23,699 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:24,284 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:24,285 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:24,285 - sqlalchemy.engine.Engine - INFO - [cached since 161.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 24, 283485))
2025-05-07 11:42:24,286 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:24,287 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 24, 283485))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:24,289 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:24,323 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:24,323 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:24,323 - sqlalchemy.engine.Engine - INFO - [cached since 89.48s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 24, 322939))
2025-05-07 11:42:24,324 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:24,325 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:24,706 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:24,707 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:24,873 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:24,873 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:24,873 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:24,873 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:25,291 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:25,291 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:25,292 - sqlalchemy.engine.Engine - INFO - [cached since 162.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 25, 290613))
2025-05-07 11:42:25,293 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:25,294 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 25, 290613))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:25,295 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:25,327 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:25,327 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:25,327 - sqlalchemy.engine.Engine - INFO - [cached since 90.48s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 25, 326715))
2025-05-07 11:42:25,328 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:25,329 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:25,714 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:25,714 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:26,297 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:26,297 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:26,297 - sqlalchemy.engine.Engine - INFO - [cached since 163.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 26, 296903))
2025-05-07 11:42:26,299 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:26,299 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 26, 296903))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:26,300 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:26,330 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:26,330 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:26,330 - sqlalchemy.engine.Engine - INFO - [cached since 91.48s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 26, 329931))
2025-05-07 11:42:26,331 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:26,332 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:26,720 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:26,720 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:26,778 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:26,778 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:26,778 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:26,778 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:27,302 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:27,303 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:27,303 - sqlalchemy.engine.Engine - INFO - [cached since 164.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 27, 302143))
2025-05-07 11:42:27,305 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:27,306 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 27, 302143))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:27,307 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:27,334 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:27,335 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:27,335 - sqlalchemy.engine.Engine - INFO - [cached since 92.49s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 27, 333950))
2025-05-07 11:42:27,337 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:27,338 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:27,473 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:27,473 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:27,473 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:27,473 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:27,725 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:27,726 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:28,308 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:28,309 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:28,309 - sqlalchemy.engine.Engine - INFO - [cached since 165.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 28, 308724))
2025-05-07 11:42:28,310 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:28,310 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 28, 308724))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:28,311 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:28,340 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:28,340 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:28,340 - sqlalchemy.engine.Engine - INFO - [cached since 93.49s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 28, 340310))
2025-05-07 11:42:28,342 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:28,342 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:28,731 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:28,731 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:29,312 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:29,312 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:29,312 - sqlalchemy.engine.Engine - INFO - [cached since 166.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 29, 311902))
2025-05-07 11:42:29,312 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:29,313 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 29, 311902))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:29,313 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:29,343 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:29,343 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:29,343 - sqlalchemy.engine.Engine - INFO - [cached since 94.5s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 29, 343502))
2025-05-07 11:42:29,344 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:29,345 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:29,736 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:29,737 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:29,876 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:29,877 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:29,877 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:29,877 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:30,315 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:30,316 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:30,316 - sqlalchemy.engine.Engine - INFO - [cached since 167.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 30, 314898))
2025-05-07 11:42:30,317 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:30,318 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 30, 314898))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:30,319 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:30,347 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:30,347 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:30,348 - sqlalchemy.engine.Engine - INFO - [cached since 95.5s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 30, 346866))
2025-05-07 11:42:30,349 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:30,350 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:30,742 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:30,743 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:31,321 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:31,322 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:31,322 - sqlalchemy.engine.Engine - INFO - [cached since 168.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 31, 320540))
2025-05-07 11:42:31,325 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:31,327 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 31, 320540))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:31,329 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:31,352 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:31,353 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:31,354 - sqlalchemy.engine.Engine - INFO - [cached since 96.51s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 31, 352342))
2025-05-07 11:42:31,355 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:31,358 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:31,748 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:31,749 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:31,779 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:31,779 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:31,779 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:31,779 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:32,331 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:32,331 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:32,331 - sqlalchemy.engine.Engine - INFO - [cached since 169.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 32, 330751))
2025-05-07 11:42:32,332 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:32,333 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 32, 330751))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:32,333 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:32,360 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:32,360 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:32,360 - sqlalchemy.engine.Engine - INFO - [cached since 97.51s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 32, 360139))
2025-05-07 11:42:32,362 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:32,362 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:32,473 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:32,473 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:32,473 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:32,473 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:32,754 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:32,754 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:33,335 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:33,336 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:33,338 - sqlalchemy.engine.Engine - INFO - [cached since 170.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 33, 335239))
2025-05-07 11:42:33,340 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:33,341 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 33, 335239))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:33,343 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:33,364 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:33,364 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:33,364 - sqlalchemy.engine.Engine - INFO - [cached since 98.52s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 33, 364085))
2025-05-07 11:42:33,366 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:33,366 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:33,760 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:33,761 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:34,345 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:34,345 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:34,345 - sqlalchemy.engine.Engine - INFO - [cached since 171.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 34, 345108))
2025-05-07 11:42:34,346 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:34,346 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 34, 345108))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:34,346 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:34,368 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:34,368 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:34,368 - sqlalchemy.engine.Engine - INFO - [cached since 99.52s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 34, 368286))
2025-05-07 11:42:34,369 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:34,369 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:34,767 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:34,767 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:34,878 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:34,878 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:34,878 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:34,878 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:35,348 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:35,348 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:35,348 - sqlalchemy.engine.Engine - INFO - [cached since 172.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 35, 347990))
2025-05-07 11:42:35,349 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:35,350 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 35, 347990))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:35,351 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:35,371 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:35,371 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:35,371 - sqlalchemy.engine.Engine - INFO - [cached since 100.5s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 35, 371204))
2025-05-07 11:42:35,373 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:35,374 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:35,772 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:35,773 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:36,353 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:36,354 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:36,354 - sqlalchemy.engine.Engine - INFO - [cached since 173.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 36, 352937))
2025-05-07 11:42:36,356 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:36,358 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 36, 352937))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:36,359 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:36,376 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:36,377 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:36,377 - sqlalchemy.engine.Engine - INFO - [cached since 101.5s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 36, 375757))
2025-05-07 11:42:36,379 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:36,380 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:36,779 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:36,779 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:36,779 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:36,779 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:36,779 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:36,779 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:37,361 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:37,361 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:37,361 - sqlalchemy.engine.Engine - INFO - [cached since 174.9s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 37, 360919))
2025-05-07 11:42:37,362 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:37,363 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 37, 360919))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:37,364 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:37,382 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:37,382 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:37,382 - sqlalchemy.engine.Engine - INFO - [cached since 102.5s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 37, 381768))
2025-05-07 11:42:37,383 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:37,384 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:37,474 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:37,475 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:37,475 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:37,475 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:37,785 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:37,786 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:38,379 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:38,395 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:38,395 - sqlalchemy.engine.Engine - INFO - [cached since 176s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 38, 379273))
2025-05-07 11:42:38,400 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:38,406 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:38,406 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:38,406 - sqlalchemy.engine.Engine - INFO - [cached since 103.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 38, 396901))
2025-05-07 11:42:38,407 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 38, 379273))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:38,407 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:38,407 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:38,409 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:38,791 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:38,792 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:39,408 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:39,408 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:39,408 - sqlalchemy.engine.Engine - INFO - [cached since 177s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 39, 408258))
2025-05-07 11:42:39,409 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:39,409 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 39, 408258))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:39,410 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:39,411 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:39,411 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:39,411 - sqlalchemy.engine.Engine - INFO - [cached since 104.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 39, 411080))
2025-05-07 11:42:39,412 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:39,412 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:39,798 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:39,798 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:39,879 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:39,879 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:39,880 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:39,880 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:40,412 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:40,412 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:40,412 - sqlalchemy.engine.Engine - INFO - [cached since 178s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 40, 411749))
2025-05-07 11:42:40,414 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:40,414 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:40,415 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:40,415 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 40, 411749))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:40,415 - sqlalchemy.engine.Engine - INFO - [cached since 105.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 40, 414327))
2025-05-07 11:42:40,415 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:40,416 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:40,417 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:40,804 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:40,805 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:41,417 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:41,418 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:41,419 - sqlalchemy.engine.Engine - INFO - [cached since 179s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 41, 417457))
2025-05-07 11:42:41,419 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:41,419 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:41,420 - sqlalchemy.engine.Engine - INFO - [cached since 106.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 41, 418678))
2025-05-07 11:42:41,420 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:41,421 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:41,421 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 41, 417457))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:41,422 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:41,424 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:41,780 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:41,780 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:41,780 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:41,781 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:41,810 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:41,810 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:42,424 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:42,425 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:42,425 - sqlalchemy.engine.Engine - INFO - [cached since 180s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 42, 423813))
2025-05-07 11:42:42,426 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:42,426 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:42,426 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:42,427 - sqlalchemy.engine.Engine - INFO - [cached since 107.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 42, 425794))
2025-05-07 11:42:42,427 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 42, 423813))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:42,428 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:42,429 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:42,430 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:42,475 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:42,476 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:42,476 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:42,476 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:42,817 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:42,817 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:43,431 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:43,432 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:43,432 - sqlalchemy.engine.Engine - INFO - [cached since 181s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 43, 431045))
2025-05-07 11:42:43,433 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:43,433 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:43,433 - sqlalchemy.engine.Engine - INFO - [cached since 108.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 43, 432670))
2025-05-07 11:42:43,434 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:43,435 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 43, 431045))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:43,435 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:43,436 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:43,442 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:43,823 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:43,824 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:44,437 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:44,437 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:44,437 - sqlalchemy.engine.Engine - INFO - [cached since 182s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 44, 437324))
2025-05-07 11:42:44,438 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:44,438 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 44, 437324))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:44,439 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:44,444 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:44,444 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:44,444 - sqlalchemy.engine.Engine - INFO - [cached since 109.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 44, 444039))
2025-05-07 11:42:44,445 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:44,445 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:44,831 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:44,831 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:44,880 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:44,880 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:44,880 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:44,880 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:45,441 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:45,442 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:45,442 - sqlalchemy.engine.Engine - INFO - [cached since 183s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 45, 440948))
2025-05-07 11:42:45,444 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:45,445 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 45, 440948))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:45,446 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:45,448 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:45,449 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:45,449 - sqlalchemy.engine.Engine - INFO - [cached since 110.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 45, 448409))
2025-05-07 11:42:45,451 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:45,452 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:45,836 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:45,836 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:46,447 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:46,448 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:46,448 - sqlalchemy.engine.Engine - INFO - [cached since 184s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 46, 447058))
2025-05-07 11:42:46,449 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:46,450 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 46, 447058))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:46,452 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:46,454 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:46,455 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:46,455 - sqlalchemy.engine.Engine - INFO - [cached since 111.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 46, 454216))
2025-05-07 11:42:46,457 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:46,461 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:46,782 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:46,782 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:46,782 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:46,782 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:46,841 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:46,842 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:47,454 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:47,454 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:47,454 - sqlalchemy.engine.Engine - INFO - [cached since 185s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 47, 454115))
2025-05-07 11:42:47,455 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:47,456 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 47, 454115))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:47,456 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:47,462 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:47,463 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:47,463 - sqlalchemy.engine.Engine - INFO - [cached since 112.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 47, 462553))
2025-05-07 11:42:47,464 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:47,464 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:47,478 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:47,478 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:47,478 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:47,478 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:47,849 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:47,849 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:48,459 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:48,460 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:48,460 - sqlalchemy.engine.Engine - INFO - [cached since 186s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 48, 459229))
2025-05-07 11:42:48,461 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:48,461 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 48, 459229))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:48,462 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:48,466 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:48,466 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:48,466 - sqlalchemy.engine.Engine - INFO - [cached since 113.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 48, 465471))
2025-05-07 11:42:48,468 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:48,469 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:48,856 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:48,856 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:49,464 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:49,464 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:49,464 - sqlalchemy.engine.Engine - INFO - [cached since 187s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 49, 463830))
2025-05-07 11:42:49,465 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:49,465 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 49, 463830))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:49,466 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:49,470 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:49,470 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:49,470 - sqlalchemy.engine.Engine - INFO - [cached since 114.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 49, 470485))
2025-05-07 11:42:49,471 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:49,472 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:49,863 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:49,863 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:49,882 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:49,882 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:49,882 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:49,882 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:50,468 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:50,469 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:50,469 - sqlalchemy.engine.Engine - INFO - [cached since 188s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 50, 467556))
2025-05-07 11:42:50,470 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:50,471 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 50, 467556))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:50,473 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:50,475 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:50,476 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:50,476 - sqlalchemy.engine.Engine - INFO - [cached since 115.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 50, 475394))
2025-05-07 11:42:50,478 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:50,479 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:50,870 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:50,871 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:51,475 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:51,476 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:51,477 - sqlalchemy.engine.Engine - INFO - [cached since 189s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 51, 475107))
2025-05-07 11:42:51,478 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:51,479 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 51, 475107))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:51,480 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:51,481 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:51,481 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:51,482 - sqlalchemy.engine.Engine - INFO - [cached since 116.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 51, 481370))
2025-05-07 11:42:51,483 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:51,484 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:51,783 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:51,783 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:51,783 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:51,783 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:51,875 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:51,875 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:52,479 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:52,480 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:52,480 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:52,480 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:52,481 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:52,482 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:52,482 - sqlalchemy.engine.Engine - INFO - [cached since 190.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 52, 481489))
2025-05-07 11:42:52,483 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:52,484 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 52, 481489))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:52,484 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:52,486 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:52,486 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:52,486 - sqlalchemy.engine.Engine - INFO - [cached since 117.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 52, 485709))
2025-05-07 11:42:52,487 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:52,488 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:52,881 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:52,882 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:53,486 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:53,487 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:53,488 - sqlalchemy.engine.Engine - INFO - [cached since 191.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 53, 486446))
2025-05-07 11:42:53,491 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:53,493 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:53,493 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:53,493 - sqlalchemy.engine.Engine - INFO - [cached since 118.6s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 53, 490401))
2025-05-07 11:42:53,494 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 53, 486446))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:53,496 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:53,496 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:53,497 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:53,888 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:53,889 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:54,497 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:54,498 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:54,498 - sqlalchemy.engine.Engine - INFO - [cached since 192.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 54, 497509))
2025-05-07 11:42:54,498 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:54,499 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:54,499 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:54,499 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 54, 497509))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:54,499 - sqlalchemy.engine.Engine - INFO - [cached since 119.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 54, 499228))
2025-05-07 11:42:54,500 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:54,500 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:54,501 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:54,883 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:54,883 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:54,883 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:54,883 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:54,894 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:54,894 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:55,501 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:55,502 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:55,502 - sqlalchemy.engine.Engine - INFO - [cached since 193.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 55, 501670))
2025-05-07 11:42:55,503 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:55,503 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:55,503 - sqlalchemy.engine.Engine - INFO - [cached since 120.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 55, 502727))
2025-05-07 11:42:55,503 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:55,504 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 55, 501670))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:55,504 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:55,504 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:55,505 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:55,901 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:55,902 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:56,506 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:56,507 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:56,507 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:56,508 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:56,507 - sqlalchemy.engine.Engine - INFO - [cached since 194.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 56, 506333))
2025-05-07 11:42:56,508 - sqlalchemy.engine.Engine - INFO - [cached since 121.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 56, 506769))
2025-05-07 11:42:56,510 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:56,510 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:56,514 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:56,514 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 56, 506333))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:56,517 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:56,784 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:56,784 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:56,785 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:56,785 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:56,907 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:56,907 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:57,482 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:57,482 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:57,482 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:57,483 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:57,516 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:57,516 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:57,516 - sqlalchemy.engine.Engine - INFO - [cached since 122.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 57, 515979))
2025-05-07 11:42:57,518 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:57,518 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:57,519 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:57,519 - sqlalchemy.engine.Engine - INFO - [cached since 195.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 57, 518295))
2025-05-07 11:42:57,519 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:57,520 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:57,520 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 57, 518295))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:57,521 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:57,914 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:57,914 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:58,522 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:58,523 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:58,523 - sqlalchemy.engine.Engine - INFO - [cached since 123.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 58, 521816))
2025-05-07 11:42:58,523 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:58,524 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:58,524 - sqlalchemy.engine.Engine - INFO - [cached since 196.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 58, 523158))
2025-05-07 11:42:58,526 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:58,526 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:58,527 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 58, 523158))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:58,530 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:58,531 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:58,920 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:58,921 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:59,532 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:59,532 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:42:59,533 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:59,533 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:42:59,533 - sqlalchemy.engine.Engine - INFO - [cached since 124.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 42, 59, 532458))
2025-05-07 11:42:59,533 - sqlalchemy.engine.Engine - INFO - [cached since 197.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 59, 532422))
2025-05-07 11:42:59,534 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:42:59,534 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:42:59,534 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 42, 59, 532422))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:42:59,535 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:42:59,535 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:42:59,884 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:42:59,884 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:42:59,884 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:42:59,884 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:42:59,927 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:42:59,927 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:00,536 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:00,536 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:00,537 - sqlalchemy.engine.Engine - INFO - [cached since 198.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 0, 536289))
2025-05-07 11:43:00,537 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:00,537 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:00,537 - sqlalchemy.engine.Engine - INFO - [cached since 125.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 0, 537261))
2025-05-07 11:43:00,538 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:00,538 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 0, 536289))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:00,539 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:00,539 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:00,542 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:00,933 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:00,934 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:01,541 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:01,541 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:01,541 - sqlalchemy.engine.Engine - INFO - [cached since 199.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 1, 540820))
2025-05-07 11:43:01,542 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:01,543 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:01,543 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:01,543 - sqlalchemy.engine.Engine - INFO - [cached since 126.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 1, 542559))
2025-05-07 11:43:01,543 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 1, 540820))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:01,544 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:01,544 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:01,545 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:01,786 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:01,786 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:01,786 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:01,786 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:01,939 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:01,939 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:02,484 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:02,484 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:02,484 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:02,484 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:02,545 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:02,545 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:02,545 - sqlalchemy.engine.Engine - INFO - [cached since 200.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 2, 544901))
2025-05-07 11:43:02,546 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:02,546 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:02,547 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:02,547 - sqlalchemy.engine.Engine - INFO - [cached since 127.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 2, 546482))
2025-05-07 11:43:02,547 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 2, 544901))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:02,547 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:02,547 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:02,548 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:02,945 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:02,946 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:03,550 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:03,550 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:03,551 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:03,551 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:03,553 - sqlalchemy.engine.Engine - INFO - [cached since 201.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 3, 549382))
2025-05-07 11:43:03,552 - sqlalchemy.engine.Engine - INFO - [cached since 128.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 3, 549694))
2025-05-07 11:43:03,555 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:03,556 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:03,558 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 3, 549382))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:03,560 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:03,560 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:03,952 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:03,953 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:04,562 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:04,562 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:04,563 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:04,563 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:04,563 - sqlalchemy.engine.Engine - INFO - [cached since 129.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 4, 562362))
2025-05-07 11:43:04,563 - sqlalchemy.engine.Engine - INFO - [cached since 202.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 4, 562217))
2025-05-07 11:43:04,564 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:04,564 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:04,565 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 4, 562217))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:04,566 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:04,566 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:04,884 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:04,885 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:04,885 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:04,885 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:04,959 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:04,959 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:05,568 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:05,568 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:05,569 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:05,570 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:05,570 - sqlalchemy.engine.Engine - INFO - [cached since 203.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 5, 567793))
2025-05-07 11:43:05,570 - sqlalchemy.engine.Engine - INFO - [cached since 130.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 5, 567920))
2025-05-07 11:43:05,572 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:05,572 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:05,573 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 5, 567793))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:05,574 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:05,574 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:05,965 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:05,966 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:06,576 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:06,576 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:06,577 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:06,577 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:06,577 - sqlalchemy.engine.Engine - INFO - [cached since 131.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 6, 575785))
2025-05-07 11:43:06,577 - sqlalchemy.engine.Engine - INFO - [cached since 204.1s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 6, 575615))
2025-05-07 11:43:06,579 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:06,580 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:06,581 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 6, 575615))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:06,585 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:06,586 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:06,787 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:06,787 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:06,787 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:06,787 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:06,972 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:06,972 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:07,485 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:07,485 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:07,486 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:07,486 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - [cached since 205.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 7, 587265))
2025-05-07 11:43:07,587 - sqlalchemy.engine.Engine - INFO - [cached since 132.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 7, 587361))
2025-05-07 11:43:07,588 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:07,588 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:07,588 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 7, 587265))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:07,588 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:07,589 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:07,978 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:07,978 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:08,589 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:08,589 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:08,590 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:08,590 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:08,590 - sqlalchemy.engine.Engine - INFO - [cached since 133.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 8, 589610))
2025-05-07 11:43:08,590 - sqlalchemy.engine.Engine - INFO - [cached since 206.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 8, 589508))
2025-05-07 11:43:08,591 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:08,591 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:08,592 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 8, 589508))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:08,592 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:08,592 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:08,984 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:08,984 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - [cached since 134.7s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 9, 594071))
2025-05-07 11:43:09,594 - sqlalchemy.engine.Engine - INFO - [cached since 207.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 9, 594186))
2025-05-07 11:43:09,595 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:09,595 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 9, 594186))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:09,595 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:09,596 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:09,596 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:09,886 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:09,886 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:09,886 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:09,886 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:09,990 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:09,990 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:10,598 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:10,598 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:10,598 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:10,599 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:10,599 - sqlalchemy.engine.Engine - INFO - [cached since 208.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 10, 597499))
2025-05-07 11:43:10,599 - sqlalchemy.engine.Engine - INFO - [cached since 135.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 10, 597746))
2025-05-07 11:43:10,601 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:10,601 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:10,602 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 10, 597499))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:10,604 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:10,605 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:10,997 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:10,997 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:11,606 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:11,607 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:11,607 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:11,607 - sqlalchemy.engine.Engine - INFO - [cached since 136.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 11, 606286))
2025-05-07 11:43:11,608 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:11,608 - sqlalchemy.engine.Engine - INFO - [cached since 209.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 11, 607005))
2025-05-07 11:43:11,610 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:11,610 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:11,611 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:11,611 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 11, 607005))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:11,613 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:11,788 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:11,788 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:11,788 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:11,788 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:12,004 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:12,005 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:12,487 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:12,487 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:12,488 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:12,488 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:12,613 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:12,613 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:12,613 - sqlalchemy.engine.Engine - INFO - [cached since 137.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 12, 613031))
2025-05-07 11:43:12,615 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:12,615 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:12,615 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:12,616 - sqlalchemy.engine.Engine - INFO - [cached since 210.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 12, 615414))
2025-05-07 11:43:12,616 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:12,616 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:12,616 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 12, 615414))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:12,617 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:13,011 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:13,011 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:13,618 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:13,619 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:13,619 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:13,620 - sqlalchemy.engine.Engine - INFO - [cached since 138.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 13, 617762))
2025-05-07 11:43:13,620 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:13,620 - sqlalchemy.engine.Engine - INFO - [cached since 211.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 13, 618922))
2025-05-07 11:43:13,622 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:13,623 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:13,624 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 13, 618922))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:13,626 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:13,627 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:14,016 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:14,017 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:14,628 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:14,628 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:14,629 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:14,629 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:14,629 - sqlalchemy.engine.Engine - INFO - [cached since 139.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 14, 628335))
2025-05-07 11:43:14,629 - sqlalchemy.engine.Engine - INFO - [cached since 212.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 14, 628259))
2025-05-07 11:43:14,631 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:14,631 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:14,632 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 14, 628259))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:14,633 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:14,633 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:14,887 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:14,887 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:14,887 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:14,887 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:15,021 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:15,022 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:15,635 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:15,635 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:15,635 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:15,635 - sqlalchemy.engine.Engine - INFO - [cached since 213.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 15, 635038))
2025-05-07 11:43:15,636 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:15,636 - sqlalchemy.engine.Engine - INFO - [cached since 140.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 15, 635450))
2025-05-07 11:43:15,637 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:15,637 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:15,637 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 15, 635038))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:15,638 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:15,638 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:16,031 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:16,032 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:16,640 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:16,640 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:16,641 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:16,641 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:16,641 - sqlalchemy.engine.Engine - INFO - [cached since 214.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 16, 639796))
2025-05-07 11:43:16,641 - sqlalchemy.engine.Engine - INFO - [cached since 141.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 16, 640089))
2025-05-07 11:43:16,644 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:16,644 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:16,645 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 16, 639796))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:16,647 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:16,648 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:16,803 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:16,803 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:16,803 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:16,803 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:17,038 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:17,038 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:17,489 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:17,490 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:17,490 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:17,490 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:17,649 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:17,649 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:17,649 - sqlalchemy.engine.Engine - INFO - [cached since 142.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 17, 649160))
2025-05-07 11:43:17,649 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:17,650 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:17,650 - sqlalchemy.engine.Engine - INFO - [cached since 215.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 17, 649728))
2025-05-07 11:43:17,650 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:17,650 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:17,650 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 17, 649728))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:17,650 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:17,651 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:18,043 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:18,044 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:18,653 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:18,653 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:18,654 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:18,654 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:18,654 - sqlalchemy.engine.Engine - INFO - [cached since 143.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 18, 652731))
2025-05-07 11:43:18,654 - sqlalchemy.engine.Engine - INFO - [cached since 216.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 18, 652596))
2025-05-07 11:43:18,657 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:18,657 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:18,658 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 18, 652596))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:18,659 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:18,659 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:19,049 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:19,050 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:19,660 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:19,660 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-07 11:43:19,661 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:19,661 - sqlalchemy.engine.Engine - INFO - 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    
2025-05-07 11:43:19,661 - sqlalchemy.engine.Engine - INFO - [cached since 144.8s ago] ('funding_strategy', False, '{"binance_sub_1": {"status": "FAILED", "initialized": false, "entry_data": null, "next_account_id": "binance_sub_2", "error": "\\u4ece\\u4e3b\\u8d26\ ... (2120 characters truncated) ...  null, "next_account_id": "binance_sub_20"}, "binance_sub_20": {"status": "IDLE", "initialized": false, "entry_data": null, "next_account_id": null}}', datetime.datetime(2025, 5, 7, 11, 40, 54, 845635), datetime.datetime(2025, 5, 7, 11, 43, 19, 660471))
2025-05-07 11:43:19,661 - sqlalchemy.engine.Engine - INFO - [cached since 217.2s ago] ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 19, 660347))
2025-05-07 11:43:19,664 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-07 11:43:19,664 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-07 11:43:19,664 - src.modules.state.manager - ERROR - 保存策略状态失败: (sqlalchemy.dialects.postgresql.asyncpg.Error) <class 'asyncpg.exceptions.DataError'>: invalid input for query argument $3: {'binance_sub_1': {'status': 'FAILED', '... (descriptor 'encode' for 'str' objects doesn't apply to a 'dict' object)
[SQL: 
                    INSERT INTO strategy_states (strategy_id, is_active, accounts_status, started_at, last_updated)
                    VALUES ($1, $2, $3, $4, $5)
                    ON CONFLICT (strategy_id) DO UPDATE
                    SET is_active = $2, accounts_status = $3, last_updated = $5
                    ]
[parameters: ('funding_strategy', False, {'binance_sub_1': {'status': 'FAILED', 'initialized': False, 'entry_data': None, 'next_account_id': 'binance_sub_2', 'error': '从主账户转入资金到 binance_sub_1 ... (2052 characters truncated) ... : None, 'next_account_id': 'binance_sub_20'}, 'binance_sub_20': {'status': 'IDLE', 'initialized': False, 'entry_data': None, 'next_account_id': None}}, datetime.datetime(2025, 5, 7, 11, 39, 42, 427484), datetime.datetime(2025, 5, 7, 11, 43, 19, 660347))]
(Background on this error at: https://sqlalche.me/e/20/dbapi)
2025-05-07 11:43:19,665 - src.modules.state.manager - INFO - 已保存策略状态
2025-05-07 11:43:19,665 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
2025-05-07 11:43:19,888 - src.modules.risk.monitor - INFO - （模拟）获取价格: BTC/USDT
2025-05-07 11:43:19,888 - src.modules.risk.monitor - INFO - （模拟）获取资金费率: BTC/USD
2025-05-07 11:43:19,888 - src.modules.risk.monitor - INFO - （模拟）获取账户持仓: binance_sub_1
2025-05-07 11:43:19,888 - src.modules.risk.monitor - INFO - （模拟）获取杠杆借贷信息: binance_sub_1
2025-05-07 11:43:20,055 - src.modules.state.manager - ERROR - 保存策略状态失败: role "postgres" does not exist
2025-05-07 11:43:20,055 - src.modules.state.manager - INFO - 已使用备用方法保存策略状态
